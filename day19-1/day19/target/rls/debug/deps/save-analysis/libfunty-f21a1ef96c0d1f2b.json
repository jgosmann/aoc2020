{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1","program":"/Users/jgosmann/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","funty","--edition=2018","/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=f21a1ef96c0d1f2b","-C","extra-filename=-f21a1ef96c0d1f2b","--out-dir","/Users/jgosmann/Documents/projects/aoc/2020/day19/target/rls/debug/deps","-L","dependency=/Users/jgosmann/Documents/projects/aoc/2020/day19/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/Users/jgosmann/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/jgosmann/Documents/projects/aoc/2020/day19/target/rls/debug/deps/libfunty-f21a1ef96c0d1f2b.rmeta"},"prelude":{"crate_id":{"name":"funty","disambiguator":[14833740177057221427,257464134259596050]},"crate_root":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src","external_crates":[{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[7138156953393190069,11167026927698897809]}},{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[11939350525270529775,5037047709352975340]}},{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[7424844044863599670,8838585625468081887]}}],"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":0,"byte_end":51711,"line_start":1,"line_end":1547,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":0,"byte_end":51711,"line_start":1,"line_end":1547,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":1359},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":1373},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":68},{"krate":0,"index":181},{"krate":0,"index":189},{"krate":0,"index":193},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":257},{"krate":0,"index":260},{"krate":0,"index":263},{"krate":0,"index":266},{"krate":0,"index":269},{"krate":0,"index":272},{"krate":0,"index":275},{"krate":0,"index":278},{"krate":0,"index":281},{"krate":0,"index":284},{"krate":0,"index":287},{"krate":0,"index":290},{"krate":0,"index":293},{"krate":0,"index":296},{"krate":0,"index":383},{"krate":0,"index":387},{"krate":0,"index":391},{"krate":0,"index":395},{"krate":0,"index":399},{"krate":0,"index":403},{"krate":0,"index":407},{"krate":0,"index":411},{"krate":0,"index":415},{"krate":0,"index":419},{"krate":0,"index":423},{"krate":0,"index":427},{"krate":0,"index":1091},{"krate":0,"index":1092},{"krate":0,"index":1093},{"krate":0,"index":1094},{"krate":0,"index":1095},{"krate":0,"index":1096},{"krate":0,"index":1139},{"krate":0,"index":1140},{"krate":0,"index":1141},{"krate":0,"index":1142},{"krate":0,"index":1143},{"krate":0,"index":1144},{"krate":0,"index":1163},{"krate":0,"index":1195},{"krate":0,"index":1255},{"krate":0,"index":1256},{"krate":0,"index":1257},{"krate":0,"index":1258},{"krate":0,"index":1259},{"krate":0,"index":1260},{"krate":0,"index":1261},{"krate":0,"index":1262},{"krate":0,"index":1263},{"krate":0,"index":1264},{"krate":0,"index":1265},{"krate":0,"index":1266},{"krate":0,"index":1267},{"krate":0,"index":1268},{"krate":0,"index":1269},{"krate":0,"index":1270},{"krate":0,"index":1271},{"krate":0,"index":1272},{"krate":0,"index":1273},{"krate":0,"index":1274},{"krate":0,"index":1275},{"krate":0,"index":1276},{"krate":0,"index":1277},{"krate":0,"index":1278},{"krate":0,"index":1279},{"krate":0,"index":1280},{"krate":0,"index":1281},{"krate":0,"index":1282},{"krate":0,"index":1283},{"krate":0,"index":1284},{"krate":0,"index":1285},{"krate":0,"index":1286},{"krate":0,"index":1287},{"krate":0,"index":1288},{"krate":0,"index":1289},{"krate":0,"index":1290},{"krate":0,"index":1291},{"krate":0,"index":1292},{"krate":0,"index":1293},{"krate":0,"index":1294},{"krate":0,"index":1295},{"krate":0,"index":1296},{"krate":0,"index":1297},{"krate":0,"index":1298},{"krate":0,"index":1299},{"krate":0,"index":1300},{"krate":0,"index":1301},{"krate":0,"index":1302},{"krate":0,"index":1303},{"krate":0,"index":1304},{"krate":0,"index":1305},{"krate":0,"index":1306},{"krate":0,"index":1307},{"krate":0,"index":1308},{"krate":0,"index":1309},{"krate":0,"index":1310},{"krate":0,"index":1311},{"krate":0,"index":1312},{"krate":0,"index":1313},{"krate":0,"index":1314},{"krate":0,"index":1315},{"krate":0,"index":1316},{"krate":0,"index":1317},{"krate":0,"index":1318},{"krate":0,"index":1319},{"krate":0,"index":1320},{"krate":0,"index":1321},{"krate":0,"index":1322},{"krate":0,"index":1323},{"krate":0,"index":1324},{"krate":0,"index":1325},{"krate":0,"index":1326},{"krate":0,"index":1327},{"krate":0,"index":1328},{"krate":0,"index":1329},{"krate":0,"index":1330},{"krate":0,"index":1331},{"krate":0,"index":1332},{"krate":0,"index":1333},{"krate":0,"index":1334},{"krate":0,"index":1335},{"krate":0,"index":1336},{"krate":0,"index":1337},{"krate":0,"index":1338},{"krate":0,"index":1339},{"krate":0,"index":1340},{"krate":0,"index":1341},{"krate":0,"index":1342},{"krate":0,"index":1343},{"krate":0,"index":1344},{"krate":0,"index":1345},{"krate":0,"index":1346},{"krate":0,"index":1347},{"krate":0,"index":1348},{"krate":0,"index":1349},{"krate":0,"index":1350},{"krate":0,"index":1351},{"krate":0,"index":1352}],"decl_id":null,"docs":" `fun`damental `ty`pes","sig":null,"attributes":[{"value":"* `fun`damental `ty`pes\n\nThis crate provides trait unification of the Rust fundamental numbers, allowing\nusers to declare the behavior they want from a number without committing to a\nsingle particular numeric type.\n\nThe number types can be categorized along two axes: behavior and width. Traits\nfor each axis and group on that axis are provided:\n\n## Numeric Categories\n\nThe most general category is represented by the trait [`IsNumber`]. It is\nimplemented by all the numeric fundamentals, and includes only the traits that\nthey all implement. This is an already-large amount: basic memory management,\ncomparison, rendering, and numeric arithmetic.\n\nThe numbers are then split into [`IsInteger`] and [`IsFloat`]. The former fills\nout the API of `f32` and `f64`, while the latter covers all of the `iN` and `uN`\nnumbers.\n\nLastly, [`IsInteger`] splits further, into [`IsSigned`] and [`IsUnsigned`].\nThese provide the last specializations unique to the differences between `iN`\nand `uN`.\n\n## Width Categories\n\nEvery number implements the trait `IsN` for the `N` of its bit width. `isize`\nand `usize` implement the trait that matches their width on the target platform.\n\nIn addition, the trait groups `AtLeastN` and `AtMostN` enable clamping the range\nof acceptable widths to lower or upper bounds. These traits are equivalent to\n`mem::size_of::<T>() >= N` and `mem::size_of::<T>() <= N`, respectively.\n\n[`IsFloat`]: trait.IsFloat.html\n[`IsInteger`]: trait.IsInteger.html\n[`IsNumber`]: trait.IsNumber.html\n[`IsSigned`]: trait.IsSigned.html\n[`IsUnsigned`]: trait.IsUnsigned.html\n!*/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":0,"byte_end":1578,"line_start":1,"line_end":39,"column_start":1,"column_end":4}},{"value":"no_std","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":1614,"byte_end":1620,"line_start":41,"line_end":41,"column_start":35,"column_end":41}},{"value":"deny(unconditional_recursion)","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":1623,"byte_end":1656,"line_start":42,"line_end":42,"column_start":1,"column_end":34}}]},{"kind":"Trait","id":{"krate":0,"index":48},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":2308,"byte_end":2316,"line_start":99,"line_end":99,"column_start":11,"column_end":19},"name":"IsNumber","qualname":"::IsNumber","value":"IsNumber: Sized + Send + Sync + Unpin + Clone + Copy + Default + FromStr +\nPartialEq<Self> + PartialOrd<Self> + Debug + Display + Product<Self> +\nfor<'a> Product<&'a Self> + Sum<Self> + for<'a> Sum<&'a Self> + Add<Self,\nOutput = Self> + for<'a> Add<&'a Self, Output = Self> + AddAssign<Self> +\nfor<'a> AddAssign<&'a Self> + Sub<Self, Output = Self> + for<'a> Sub<&'a Self,\nOutput = Self> + SubAssign<Self> + for<'a> SubAssign<&'a Self> + Mul<Self,\nOutput = Self> + for<'a> Mul<&'a Self, Output = Self> + MulAssign<Self> +\nfor<'a> MulAssign<&'a Self> + Div<Self, Output = Self> + for<'a> Div<&'a Self,\nOutput = Self> + DivAssign<Self> + for<'a> DivAssign<&'a Self> + Rem<Self,\nOutput = Self> + for<'a> Rem<&'a Self, Output = Self> + RemAssign<Self> +\nfor<'a> RemAssign<&'a Self>","parent":null,"children":[{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67}],"decl_id":null,"docs":" Declare that a type is an abstract number.","sig":null,"attributes":[{"value":"/ Declare that a type is an abstract number.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":2155,"byte_end":2201,"line_start":95,"line_end":95,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":2202,"byte_end":2205,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ This unifies all of the signed-integer, unsigned-integer, and floating-point","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":2206,"byte_end":2286,"line_start":97,"line_end":97,"column_start":1,"column_end":81}},{"value":"/ types.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":2287,"byte_end":2297,"line_start":98,"line_end":98,"column_start":1,"column_end":11}}]},{"kind":"Type","id":{"krate":0,"index":61},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":3174,"byte_end":3179,"line_start":140,"line_end":140,"column_start":7,"column_end":12},"name":"Bytes","qualname":"::IsNumber::Bytes","value":"type Bytes;","parent":{"krate":0,"index":48},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":3296,"byte_end":3307,"line_start":144,"line_end":144,"column_start":5,"column_end":16},"name":"to_be_bytes","qualname":"::IsNumber::to_be_bytes","value":"pub fn to_be_bytes(Self) -> Self::Bytes","parent":{"krate":0,"index":48},"children":[],"decl_id":null,"docs":" Return the memory representation of this number as a byte array in\n big-endian (network) byte order.\n","sig":null,"attributes":[{"value":"/ Return the memory representation of this number as a byte array in","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":3183,"byte_end":3253,"line_start":142,"line_end":142,"column_start":2,"column_end":72}},{"value":"/ big-endian (network) byte order.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":3255,"byte_end":3291,"line_start":143,"line_end":143,"column_start":2,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":3438,"byte_end":3449,"line_start":148,"line_end":148,"column_start":5,"column_end":16},"name":"to_le_bytes","qualname":"::IsNumber::to_le_bytes","value":"pub fn to_le_bytes(Self) -> Self::Bytes","parent":{"krate":0,"index":48},"children":[],"decl_id":null,"docs":" Return the memory representation of this number as a byte array in\n little-endian byte order.\n","sig":null,"attributes":[{"value":"/ Return the memory representation of this number as a byte array in","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":3332,"byte_end":3402,"line_start":146,"line_end":146,"column_start":2,"column_end":72}},{"value":"/ little-endian byte order.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":3404,"byte_end":3433,"line_start":147,"line_end":147,"column_start":2,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":3573,"byte_end":3584,"line_start":152,"line_end":152,"column_start":5,"column_end":16},"name":"to_ne_bytes","qualname":"::IsNumber::to_ne_bytes","value":"pub fn to_ne_bytes(Self) -> Self::Bytes","parent":{"krate":0,"index":48},"children":[],"decl_id":null,"docs":" Return the memory representation of this number as a byte array in\n native byte order.\n","sig":null,"attributes":[{"value":"/ Return the memory representation of this number as a byte array in","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":3474,"byte_end":3544,"line_start":150,"line_end":150,"column_start":2,"column_end":72}},{"value":"/ native byte order.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":3546,"byte_end":3568,"line_start":151,"line_end":151,"column_start":2,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":3700,"byte_end":3713,"line_start":156,"line_end":156,"column_start":5,"column_end":18},"name":"from_be_bytes","qualname":"::IsNumber::from_be_bytes","value":"pub fn from_be_bytes(Self::Bytes) -> Self","parent":{"krate":0,"index":48},"children":[],"decl_id":null,"docs":" Create a numeric value from its representation as a byte array in big\n endian.\n","sig":null,"attributes":[{"value":"/ Create a numeric value from its representation as a byte array in big","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":3609,"byte_end":3682,"line_start":154,"line_end":154,"column_start":2,"column_end":75}},{"value":"/ endian.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":3684,"byte_end":3695,"line_start":155,"line_end":155,"column_start":2,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":3839,"byte_end":3852,"line_start":160,"line_end":160,"column_start":5,"column_end":18},"name":"from_le_bytes","qualname":"::IsNumber::from_le_bytes","value":"pub fn from_le_bytes(Self::Bytes) -> Self","parent":{"krate":0,"index":48},"children":[],"decl_id":null,"docs":" Create a numeric value from its representation as a byte array in little\n endian.\n","sig":null,"attributes":[{"value":"/ Create a numeric value from its representation as a byte array in little","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":3745,"byte_end":3821,"line_start":158,"line_end":158,"column_start":2,"column_end":78}},{"value":"/ endian.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":3823,"byte_end":3834,"line_start":159,"line_end":159,"column_start":2,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":3989,"byte_end":4002,"line_start":164,"line_end":164,"column_start":5,"column_end":18},"name":"from_ne_bytes","qualname":"::IsNumber::from_ne_bytes","value":"pub fn from_ne_bytes(Self::Bytes) -> Self","parent":{"krate":0,"index":48},"children":[],"decl_id":null,"docs":" Create a numeric value from its memory representation as a byte array in\n native endianness.\n","sig":null,"attributes":[{"value":"/ Create a numeric value from its memory representation as a byte array in","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":3884,"byte_end":3960,"line_start":162,"line_end":162,"column_start":2,"column_end":78}},{"value":"/ native endianness.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":3962,"byte_end":3984,"line_start":163,"line_end":163,"column_start":2,"column_end":24}}]},{"kind":"Trait","id":{"krate":0,"index":68},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":4163,"byte_end":4172,"line_start":170,"line_end":170,"column_start":11,"column_end":20},"name":"IsInteger","qualname":"::IsInteger","value":"IsInteger: IsNumber + Hash + Eq + Ord + Binary + LowerHex + UpperHex + Octal +\nBitAnd<Self, Output = Self> + for<'a> BitAnd<&'a Self, Output = Self> +\nBitAndAssign<Self> + for<'a> BitAndAssign<&'a Self> + BitOr<Self, Output =\nSelf> + for<'a> BitOr<&'a Self, Output = Self> + BitOrAssign<Self> +\nfor<'a> BitOrAssign<&'a Self> + BitXor<Self, Output = Self> +\nfor<'a> BitXor<&'a Self, Output = Self> + BitXorAssign<Self> +\nfor<'a> BitXorAssign<&'a Self> + Not<Output = Self> + TryFrom<i8> +\nTryFrom<u8> + TryFrom<i16> + TryFrom<u16> + TryFrom<i32> + TryFrom<u32> +\nTryFrom<i64> + TryFrom<u64> + TryFrom<i128> + TryFrom<u128> + TryFrom<isize> +\nTryFrom<usize> + TryInto<i8> + TryInto<u8> + TryInto<i16> + TryInto<u16> +\nTryInto<i32> + TryInto<u32> + TryInto<i64> + TryInto<u64> + TryInto<i128> +\nTryInto<u128> + TryInto<isize> + TryInto<usize> + Shl<i8, Output = Self> +\nfor<'a> Shl<&'a i8, Output = Self> + ShlAssign<i8> +\nfor<'a> ShlAssign<&'a i8> + Shr<i8, Output = Self> + for<'a> Shr<&'a i8,\nOutput = Self> + ShrAssign<i8> + for<'a> ShrAssign<&'a i8> + Shl<u8, Output =\nSelf> + for<'a> Shl<&'a u8, Output = Self> + ShlAssign<u8> +\nfor<'a> ShlAssign<&'a u8> + Shr<u8, Output = Self> + for<'a> Shr<&'a u8,\nOutput = Self> + ShrAssign<u8> + for<'a> ShrAssign<&'a u8> + Shl<i16, Output =\nSelf> + for<'a> Shl<&'a i16, Output = Self> + ShlAssign<i16> +\nfor<'a> ShlAssign<&'a i16> + Shr<i16, Output = Self> + for<'a> Shr<&'a i16,\nOutput = Self> + ShrAssign<i16> + for<'a> ShrAssign<&'a i16> + Shl<u16, Output\n= Self> + for<'a> Shl<&'a u16, Output = Self> + ShlAssign<u16> +\nfor<'a> ShlAssign<&'a u16> + Shr<u16, Output = Self> + for<'a> Shr<&'a u16,\nOutput = Self> + ShrAssign<u16> + for<'a> ShrAssign<&'a u16> + Shl<i32, Output\n= Self> + for<'a> Shl<&'a i32, Output = Self> + ShlAssign<i32> +\nfor<'a> ShlAssign<&'a i32> + Shr<i32, Output = Self> + for<'a> Shr<&'a i32,\nOutput = Self> + ShrAssign<i32> + for<'a> ShrAssign<&'a i32> + Shl<u32, Output\n= Self> + for<'a> Shl<&'a u32, Output = Self> + ShlAssign<u32> +\nfor<'a> ShlAssign<&'a u32> + Shr<u32, Output = Self> + for<'a> Shr<&'a u32,\nOutput = Self> + ShrAssign<u32> + for<'a> ShrAssign<&'a u32> + Shl<i64, Output\n= Self> + for<'a> Shl<&'a i64, Output = Self> + ShlAssign<i64> +\nfor<'a> ShlAssign<&'a i64> + Shr<i64, Output = Self> + for<'a> Shr<&'a i64,\nOutput = Self> + ShrAssign<i64> + for<'a> ShrAssign<&'a i64> + Shl<u64, Output\n= Self> + for<'a> Shl<&'a u64, Output = Self> + ShlAssign<u64> +\nfor<'a> ShlAssign<&'a u64> + Shr<u64, Output = Self> + for<'a> Shr<&'a u64,\nOutput = Self> + ShrAssign<u64> + for<'a> ShrAssign<&'a u64> + Shl<i128,\nOutput = Self> + for<'a> Shl<&'a i128, Output = Self> + ShlAssign<i128> +\nfor<'a> ShlAssign<&'a i128> + Shr<i128, Output = Self> + for<'a> Shr<&'a i128,\nOutput = Self> + ShrAssign<i128> + for<'a> ShrAssign<&'a i128> + Shl<u128,\nOutput = Self> + for<'a> Shl<&'a u128, Output = Self> + ShlAssign<u128> +\nfor<'a> ShlAssign<&'a u128> + Shr<u128, Output = Self> + for<'a> Shr<&'a u128,\nOutput = Self> + ShrAssign<u128> + for<'a> ShrAssign<&'a u128> + Shl<isize,\nOutput = Self> + for<'a> Shl<&'a isize, Output = Self> + ShlAssign<isize> +\nfor<'a> ShlAssign<&'a isize> + Shr<isize, Output = Self> +\nfor<'a> Shr<&'a isize, Output = Self> + ShrAssign<isize> +\nfor<'a> ShrAssign<&'a isize> + Shl<usize, Output = Self> +\nfor<'a> Shl<&'a usize, Output = Self> + ShlAssign<usize> +\nfor<'a> ShlAssign<&'a usize> + Shr<usize, Output = Self> +\nfor<'a> Shr<&'a usize, Output = Self> + ShrAssign<usize> +\nfor<'a> ShrAssign<&'a usize>","parent":null,"children":[{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180}],"decl_id":null,"docs":" Declare that a type is a fixed-point integer.","sig":null,"attributes":[{"value":"/ Declare that a type is a fixed-point integer.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":4035,"byte_end":4084,"line_start":167,"line_end":167,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":4085,"byte_end":4088,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ This unifies all of the signed and unsigned integral types.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":4089,"byte_end":4152,"line_start":169,"line_end":169,"column_start":1,"column_end":64}}]},{"kind":"Const","id":{"krate":0,"index":123},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":7855,"byte_end":7859,"line_start":314,"line_end":314,"column_start":8,"column_end":12},"name":"ZERO","qualname":"::IsInteger::ZERO","value":"Self","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" The type’s zero value.\n","sig":null,"attributes":[{"value":"/ The type’s zero value.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":7819,"byte_end":7847,"line_start":313,"line_end":313,"column_start":2,"column_end":28}}]},{"kind":"Const","id":{"krate":0,"index":124},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":7944,"byte_end":7947,"line_start":317,"line_end":317,"column_start":8,"column_end":11},"name":"MIN","qualname":"::IsInteger::MIN","value":"Self","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" The type’s minimum value. This is zero for unsigned integers.\n","sig":null,"attributes":[{"value":"/ The type’s minimum value. This is zero for unsigned integers.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":7869,"byte_end":7936,"line_start":316,"line_end":316,"column_start":2,"column_end":67}}]},{"kind":"Const","id":{"krate":0,"index":125},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":7996,"byte_end":7999,"line_start":320,"line_end":320,"column_start":8,"column_end":11},"name":"MAX","qualname":"::IsInteger::MAX","value":"Self","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" The type’s maximum value.\n","sig":null,"attributes":[{"value":"/ The type’s maximum value.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":7957,"byte_end":7988,"line_start":319,"line_end":319,"column_start":2,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":8090,"byte_end":8099,"line_start":323,"line_end":323,"column_start":5,"column_end":14},"name":"min_value","qualname":"::IsInteger::min_value","value":"pub fn min_value() -> Self","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" Returns the smallest value that can be represented by this integer type.\n","sig":null,"attributes":[{"value":"/ Returns the smallest value that can be represented by this integer type.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":8009,"byte_end":8085,"line_start":322,"line_end":322,"column_start":2,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":8193,"byte_end":8202,"line_start":326,"line_end":326,"column_start":5,"column_end":14},"name":"max_value","qualname":"::IsInteger::max_value","value":"pub fn max_value() -> Self","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" Returns the largest value that can be represented by this integer type.\n","sig":null,"attributes":[{"value":"/ Returns the largest value that can be represented by this integer type.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":8113,"byte_end":8188,"line_start":325,"line_end":325,"column_start":2,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":8630,"byte_end":8644,"line_start":341,"line_end":341,"column_start":5,"column_end":19},"name":"from_str_radix","qualname":"::IsInteger::from_str_radix","value":"pub fn from_str_radix(&str, u32) -> Result<Self, ParseIntError>","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" Converts a string slice in a given base to an integer.","sig":null,"attributes":[{"value":"/ Converts a string slice in a given base to an integer.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":8216,"byte_end":8274,"line_start":328,"line_end":328,"column_start":2,"column_end":60}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":8276,"byte_end":8279,"line_start":329,"line_end":329,"column_start":2,"column_end":5}},{"value":"/ The string is expected to be an optional `+` or `-` sign followed by","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":8281,"byte_end":8353,"line_start":330,"line_end":330,"column_start":2,"column_end":74}},{"value":"/ digits. Leading and trailing whitespace represent an error. Digits are a","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":8355,"byte_end":8431,"line_start":331,"line_end":331,"column_start":2,"column_end":78}},{"value":"/ subset of these characters, depending on `radix`:","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":8433,"byte_end":8486,"line_start":332,"line_end":332,"column_start":2,"column_end":55}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":8488,"byte_end":8491,"line_start":333,"line_end":333,"column_start":2,"column_end":5}},{"value":"/ - `0-9`","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":8493,"byte_end":8504,"line_start":334,"line_end":334,"column_start":2,"column_end":13}},{"value":"/ - `a-z`","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":8506,"byte_end":8517,"line_start":335,"line_end":335,"column_start":2,"column_end":13}},{"value":"/ - `A-Z`","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":8519,"byte_end":8530,"line_start":336,"line_end":336,"column_start":2,"column_end":13}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":8532,"byte_end":8535,"line_start":337,"line_end":337,"column_start":2,"column_end":5}},{"value":"/ # Panics","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":8537,"byte_end":8549,"line_start":338,"line_end":338,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":8551,"byte_end":8554,"line_start":339,"line_end":339,"column_start":2,"column_end":5}},{"value":"/ This function panics if `radix` is not in the range from 2 to 36.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":8556,"byte_end":8625,"line_start":340,"line_end":340,"column_start":2,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":8777,"byte_end":8787,"line_start":344,"line_end":344,"column_start":5,"column_end":15},"name":"count_ones","qualname":"::IsInteger::count_ones","value":"pub fn count_ones(Self) -> u32","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" Returns the number of ones in the binary representation of `self`.\n","sig":null,"attributes":[{"value":"/ Returns the number of ones in the binary representation of `self`.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":8702,"byte_end":8772,"line_start":343,"line_end":343,"column_start":2,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":8880,"byte_end":8891,"line_start":347,"line_end":347,"column_start":5,"column_end":16},"name":"count_zeros","qualname":"::IsInteger::count_zeros","value":"pub fn count_zeros(Self) -> u32","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" Returns the number of zeros in the binary representation of `self`.\n","sig":null,"attributes":[{"value":"/ Returns the number of zeros in the binary representation of `self`.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":8804,"byte_end":8875,"line_start":346,"line_end":346,"column_start":2,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":8997,"byte_end":9010,"line_start":351,"line_end":351,"column_start":5,"column_end":18},"name":"leading_zeros","qualname":"::IsInteger::leading_zeros","value":"pub fn leading_zeros(Self) -> u32","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" Returns the number of leading zeros in the binary representation of\n `self`.\n","sig":null,"attributes":[{"value":"/ Returns the number of leading zeros in the binary representation of","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":8908,"byte_end":8979,"line_start":349,"line_end":349,"column_start":2,"column_end":73}},{"value":"/ `self`.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":8981,"byte_end":8992,"line_start":350,"line_end":350,"column_start":2,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":9117,"byte_end":9131,"line_start":355,"line_end":355,"column_start":5,"column_end":19},"name":"trailing_zeros","qualname":"::IsInteger::trailing_zeros","value":"pub fn trailing_zeros(Self) -> u32","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" Returns the number of trailing zeros in the binary representation of\n `self`.\n","sig":null,"attributes":[{"value":"/ Returns the number of trailing zeros in the binary representation of","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":9027,"byte_end":9099,"line_start":353,"line_end":353,"column_start":2,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":9101,"byte_end":9112,"line_start":354,"line_end":354,"column_start":2,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":9367,"byte_end":9378,"line_start":361,"line_end":361,"column_start":5,"column_end":16},"name":"rotate_left","qualname":"::IsInteger::rotate_left","value":"pub fn rotate_left(Self, u32) -> Self","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" Shifts the bits to the left by a specified amount, `n`, wrapping the\n truncated bits to the end of the resulting integer.","sig":null,"attributes":[{"value":"/ Shifts the bits to the left by a specified amount, `n`, wrapping the","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":9148,"byte_end":9220,"line_start":357,"line_end":357,"column_start":2,"column_end":74}},{"value":"/ truncated bits to the end of the resulting integer.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":9222,"byte_end":9277,"line_start":358,"line_end":358,"column_start":2,"column_end":57}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":9279,"byte_end":9282,"line_start":359,"line_end":359,"column_start":2,"column_end":5}},{"value":"/ Please note this isn’t the same operation as the `<<` shifting operator!","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":9284,"byte_end":9362,"line_start":360,"line_end":360,"column_start":2,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":9630,"byte_end":9642,"line_start":367,"line_end":367,"column_start":5,"column_end":17},"name":"rotate_right","qualname":"::IsInteger::rotate_right","value":"pub fn rotate_right(Self, u32) -> Self","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" Shifts the bits to the right by a specified amount, `n`, wrapping the\n truncated bits to the beginning of the resulting integer.","sig":null,"attributes":[{"value":"/ Shifts the bits to the right by a specified amount, `n`, wrapping the","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":9404,"byte_end":9477,"line_start":363,"line_end":363,"column_start":2,"column_end":75}},{"value":"/ truncated bits to the beginning of the resulting integer.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":9479,"byte_end":9540,"line_start":364,"line_end":364,"column_start":2,"column_end":63}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":9542,"byte_end":9545,"line_start":365,"line_end":365,"column_start":2,"column_end":5}},{"value":"/ Please note this isn’t the same operation as the `>>` shifting operator!","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":9547,"byte_end":9625,"line_start":366,"line_end":366,"column_start":2,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":9716,"byte_end":9726,"line_start":370,"line_end":370,"column_start":5,"column_end":15},"name":"swap_bytes","qualname":"::IsInteger::swap_bytes","value":"pub fn swap_bytes(Self) -> Self","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" Reverses the byte order of the integer.\n","sig":null,"attributes":[{"value":"/ Reverses the byte order of the integer.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":9668,"byte_end":9711,"line_start":369,"line_end":369,"column_start":2,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":9793,"byte_end":9805,"line_start":373,"line_end":373,"column_start":5,"column_end":17},"name":"reverse_bits","qualname":"::IsInteger::reverse_bits","value":"pub fn reverse_bits(Self) -> Self","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" Reverses the bit pattern of the integer.\n","sig":null,"attributes":[{"value":"/ Reverses the bit pattern of the integer.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":9744,"byte_end":9788,"line_start":372,"line_end":372,"column_start":2,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":9978,"byte_end":9985,"line_start":378,"line_end":378,"column_start":5,"column_end":12},"name":"from_be","qualname":"::IsInteger::from_be","value":"pub fn from_be(Self) -> Self","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" Converts an integer from big endian to the target’s endianness.","sig":null,"attributes":[{"value":"/ Converts an integer from big endian to the target’s endianness.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":9823,"byte_end":9892,"line_start":375,"line_end":375,"column_start":2,"column_end":69}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":9894,"byte_end":9897,"line_start":376,"line_end":376,"column_start":2,"column_end":5}},{"value":"/ On big endian this is a no-op. On little endian the bytes are swapped.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":9899,"byte_end":9973,"line_start":377,"line_end":377,"column_start":2,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":10160,"byte_end":10167,"line_start":383,"line_end":383,"column_start":5,"column_end":12},"name":"from_le","qualname":"::IsInteger::from_le","value":"pub fn from_le(Self) -> Self","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" Converts an integer frm little endian to the target’s endianness.","sig":null,"attributes":[{"value":"/ Converts an integer frm little endian to the target’s endianness.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":10003,"byte_end":10074,"line_start":380,"line_end":380,"column_start":2,"column_end":71}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":10076,"byte_end":10079,"line_start":381,"line_end":381,"column_start":2,"column_end":5}},{"value":"/ On little endian this is a no-op. On big endian the bytes are swapped.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":10081,"byte_end":10155,"line_start":382,"line_end":382,"column_start":2,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":10336,"byte_end":10341,"line_start":388,"line_end":388,"column_start":5,"column_end":10},"name":"to_be","qualname":"::IsInteger::to_be","value":"pub fn to_be(Self) -> Self","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" Converts `self` to big endian from the target’s endianness.","sig":null,"attributes":[{"value":"/ Converts `self` to big endian from the target’s endianness.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":10185,"byte_end":10250,"line_start":385,"line_end":385,"column_start":2,"column_end":65}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":10252,"byte_end":10255,"line_start":386,"line_end":386,"column_start":2,"column_end":5}},{"value":"/ On big endian this is a no-op. On little endian the bytes are swapped.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":10257,"byte_end":10331,"line_start":387,"line_end":387,"column_start":2,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":10513,"byte_end":10518,"line_start":393,"line_end":393,"column_start":5,"column_end":10},"name":"to_le","qualname":"::IsInteger::to_le","value":"pub fn to_le(Self) -> Self","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" Converts `self` to little endian from the target’s endianness.","sig":null,"attributes":[{"value":"/ Converts `self` to little endian from the target’s endianness.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":10359,"byte_end":10427,"line_start":390,"line_end":390,"column_start":2,"column_end":68}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":10429,"byte_end":10432,"line_start":391,"line_end":391,"column_start":2,"column_end":5}},{"value":"/ On little endian this is a no-op. On big endian the bytes are swapped.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":10434,"byte_end":10508,"line_start":392,"line_end":392,"column_start":2,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":10637,"byte_end":10648,"line_start":397,"line_end":397,"column_start":5,"column_end":16},"name":"checked_add","qualname":"::IsInteger::checked_add","value":"pub fn checked_add(Self, Self) -> Option<Self>","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" Checked integer addition. Computes `self + rhs`, returning `None` if\n overflow occurred.\n","sig":null,"attributes":[{"value":"/ Checked integer addition. Computes `self + rhs`, returning `None` if","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":10536,"byte_end":10608,"line_start":395,"line_end":395,"column_start":2,"column_end":74}},{"value":"/ overflow occurred.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":10610,"byte_end":10632,"line_start":396,"line_end":396,"column_start":2,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":10789,"byte_end":10800,"line_start":401,"line_end":401,"column_start":5,"column_end":16},"name":"checked_sub","qualname":"::IsInteger::checked_sub","value":"pub fn checked_sub(Self, Self) -> Option<Self>","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" Checked integer subtraction. Computes `self - rhs`, returning `None` if\n overflow occurred.\n","sig":null,"attributes":[{"value":"/ Checked integer subtraction. Computes `self - rhs`, returning `None` if","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":10685,"byte_end":10760,"line_start":399,"line_end":399,"column_start":2,"column_end":77}},{"value":"/ overflow occurred.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":10762,"byte_end":10784,"line_start":400,"line_end":400,"column_start":2,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":10944,"byte_end":10955,"line_start":405,"line_end":405,"column_start":5,"column_end":16},"name":"checked_mul","qualname":"::IsInteger::checked_mul","value":"pub fn checked_mul(Self, Self) -> Option<Self>","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" Checked integer multiplication. Computes `self * rhs`, returning `None`\n if overflow occurred.\n","sig":null,"attributes":[{"value":"/ Checked integer multiplication. Computes `self * rhs`, returning `None`","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":10837,"byte_end":10912,"line_start":403,"line_end":403,"column_start":2,"column_end":77}},{"value":"/ if overflow occurred.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":10914,"byte_end":10939,"line_start":404,"line_end":404,"column_start":2,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":11122,"byte_end":11133,"line_start":409,"line_end":409,"column_start":5,"column_end":16},"name":"checked_div","qualname":"::IsInteger::checked_div","value":"pub fn checked_div(Self, Self) -> Option<Self>","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" Checked integer division. Computes `self / rhs`, returning `None` if\n `rhs == 0` or the division results in overflow.\n","sig":null,"attributes":[{"value":"/ Checked integer division. Computes `self / rhs`, returning `None` if","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":10992,"byte_end":11064,"line_start":407,"line_end":407,"column_start":2,"column_end":74}},{"value":"/ `rhs == 0` or the division results in overflow.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":11066,"byte_end":11117,"line_start":408,"line_end":408,"column_start":2,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":11312,"byte_end":11330,"line_start":413,"line_end":413,"column_start":5,"column_end":23},"name":"checked_div_euclid","qualname":"::IsInteger::checked_div_euclid","value":"pub fn checked_div_euclid(Self, Self) -> Option<Self>","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" Checked Euclidean division. Computes `self.div_euclid(rhs)`, returning\n `None` if `rhs == 0` or the division results in overflow.\n","sig":null,"attributes":[{"value":"/ Checked Euclidean division. Computes `self.div_euclid(rhs)`, returning","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":11170,"byte_end":11244,"line_start":411,"line_end":411,"column_start":2,"column_end":76}},{"value":"/ `None` if `rhs == 0` or the division results in overflow.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":11246,"byte_end":11307,"line_start":412,"line_end":412,"column_start":2,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":11498,"byte_end":11509,"line_start":417,"line_end":417,"column_start":5,"column_end":16},"name":"checked_rem","qualname":"::IsInteger::checked_rem","value":"pub fn checked_rem(Self, Self) -> Option<Self>","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" Checked integer remainder. Computes `self % rhs`, returning `None` if\n `rhs == 0` or the division results in overflow.\n","sig":null,"attributes":[{"value":"/ Checked integer remainder. Computes `self % rhs`, returning `None` if","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":11367,"byte_end":11440,"line_start":415,"line_end":415,"column_start":2,"column_end":75}},{"value":"/ `rhs == 0` or the division results in overflow.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":11442,"byte_end":11493,"line_start":416,"line_end":416,"column_start":2,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":11689,"byte_end":11707,"line_start":421,"line_end":421,"column_start":5,"column_end":23},"name":"checked_rem_euclid","qualname":"::IsInteger::checked_rem_euclid","value":"pub fn checked_rem_euclid(Self, Self) -> Option<Self>","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" Checked Euclidean remainder. Computes `self.rem_euclid(rhs)`, returning\n `None` if `rhs == 0` or the division results in overflow.\n","sig":null,"attributes":[{"value":"/ Checked Euclidean remainder. Computes `self.rem_euclid(rhs)`, returning","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":11546,"byte_end":11621,"line_start":419,"line_end":419,"column_start":2,"column_end":77}},{"value":"/ `None` if `rhs == 0` or the division results in overflow.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":11623,"byte_end":11684,"line_start":420,"line_end":420,"column_start":2,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":11888,"byte_end":11899,"line_start":426,"line_end":426,"column_start":5,"column_end":16},"name":"checked_neg","qualname":"::IsInteger::checked_neg","value":"pub fn checked_neg(Self) -> Option<Self>","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" Checked negation. Computes `-self`, returning `None` if `self == MIN`.","sig":null,"attributes":[{"value":"/ Checked negation. Computes `-self`, returning `None` if `self == MIN`.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":11744,"byte_end":11818,"line_start":423,"line_end":423,"column_start":2,"column_end":76}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":11820,"byte_end":11823,"line_start":424,"line_end":424,"column_start":2,"column_end":5}},{"value":"/ Note that negating any positive integer will overflow.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":11825,"byte_end":11883,"line_start":425,"line_end":425,"column_start":2,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":12065,"byte_end":12076,"line_start":430,"line_end":430,"column_start":5,"column_end":16},"name":"checked_shl","qualname":"::IsInteger::checked_shl","value":"pub fn checked_shl(Self, u32) -> Option<Self>","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" Checked shift left. Computes `self << rhs`, returning `None` if `rhs` is\n larger than or equal to the number of bits in `self`.\n","sig":null,"attributes":[{"value":"/ Checked shift left. Computes `self << rhs`, returning `None` if `rhs` is","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":11925,"byte_end":12001,"line_start":428,"line_end":428,"column_start":2,"column_end":78}},{"value":"/ larger than or equal to the number of bits in `self`.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":12003,"byte_end":12060,"line_start":429,"line_end":429,"column_start":2,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":12253,"byte_end":12264,"line_start":434,"line_end":434,"column_start":5,"column_end":16},"name":"checked_shr","qualname":"::IsInteger::checked_shr","value":"pub fn checked_shr(Self, u32) -> Option<Self>","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" Checked shift right. Computes `self >> rhs`, returning `None` if `rhs`\n is larger than or equal to the number of bits in `self`.\n","sig":null,"attributes":[{"value":"/ Checked shift right. Computes `self >> rhs`, returning `None` if `rhs`","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":12112,"byte_end":12186,"line_start":432,"line_end":432,"column_start":2,"column_end":76}},{"value":"/ is larger than or equal to the number of bits in `self`.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":12188,"byte_end":12248,"line_start":433,"line_end":433,"column_start":2,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":12402,"byte_end":12413,"line_start":438,"line_end":438,"column_start":5,"column_end":16},"name":"checked_pow","qualname":"::IsInteger::checked_pow","value":"pub fn checked_pow(Self, u32) -> Option<Self>","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" Checked exponentiation. Computes `self.pow(exp)`, returning `None` if\n overflow occurred.\n","sig":null,"attributes":[{"value":"/ Checked exponentiation. Computes `self.pow(exp)`, returning `None` if","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":12300,"byte_end":12373,"line_start":436,"line_end":436,"column_start":2,"column_end":75}},{"value":"/ overflow occurred.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":12375,"byte_end":12397,"line_start":437,"line_end":437,"column_start":2,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":12571,"byte_end":12585,"line_start":442,"line_end":442,"column_start":5,"column_end":19},"name":"saturating_add","qualname":"::IsInteger::saturating_add","value":"pub fn saturating_add(Self, Self) -> Self","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" Saturating integer addition. Computes `self + rhs`, saturating at the\n numeric bounds instead of overflowing.\n","sig":null,"attributes":[{"value":"/ Saturating integer addition. Computes `self + rhs`, saturating at the","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":12449,"byte_end":12522,"line_start":440,"line_end":440,"column_start":2,"column_end":75}},{"value":"/ numeric bounds instead of overflowing.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":12524,"byte_end":12566,"line_start":441,"line_end":441,"column_start":2,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":12739,"byte_end":12753,"line_start":446,"line_end":446,"column_start":5,"column_end":19},"name":"saturating_sub","qualname":"::IsInteger::saturating_sub","value":"pub fn saturating_sub(Self, Self) -> Self","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" Saturating integer subtraction. Computes `self - rhs`, saturating at the\n numeric bounds instead of overflowing.\n","sig":null,"attributes":[{"value":"/ Saturating integer subtraction. Computes `self - rhs`, saturating at the","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":12614,"byte_end":12690,"line_start":444,"line_end":444,"column_start":2,"column_end":78}},{"value":"/ numeric bounds instead of overflowing.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":12692,"byte_end":12734,"line_start":445,"line_end":445,"column_start":2,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":12910,"byte_end":12924,"line_start":450,"line_end":450,"column_start":5,"column_end":19},"name":"saturating_mul","qualname":"::IsInteger::saturating_mul","value":"pub fn saturating_mul(Self, Self) -> Self","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" Saturating integer multiplication. Computes `self * rhs`, saturating at\n the numeric bounds instead of overflowing.\n","sig":null,"attributes":[{"value":"/ Saturating integer multiplication. Computes `self * rhs`, saturating at","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":12782,"byte_end":12857,"line_start":448,"line_end":448,"column_start":2,"column_end":77}},{"value":"/ the numeric bounds instead of overflowing.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":12859,"byte_end":12905,"line_start":449,"line_end":449,"column_start":2,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":13084,"byte_end":13098,"line_start":454,"line_end":454,"column_start":5,"column_end":19},"name":"saturating_pow","qualname":"::IsInteger::saturating_pow","value":"pub fn saturating_pow(Self, u32) -> Self","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" Saturating integer exponentiation. Computes `self.pow(exp)`, saturating\n at the numeric bounds instead of overflowing.\n","sig":null,"attributes":[{"value":"/ Saturating integer exponentiation. Computes `self.pow(exp)`, saturating","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":12953,"byte_end":13028,"line_start":452,"line_end":452,"column_start":2,"column_end":77}},{"value":"/ at the numeric bounds instead of overflowing.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":13030,"byte_end":13079,"line_start":453,"line_end":453,"column_start":2,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":13236,"byte_end":13248,"line_start":458,"line_end":458,"column_start":5,"column_end":17},"name":"wrapping_add","qualname":"::IsInteger::wrapping_add","value":"pub fn wrapping_add(Self, Self) -> Self","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" Wrapping (modular) addition. Computes `self + rhs`, wrapping around at\n the boundary of the type.\n","sig":null,"attributes":[{"value":"/ Wrapping (modular) addition. Computes `self + rhs`, wrapping around at","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":13126,"byte_end":13200,"line_start":456,"line_end":456,"column_start":2,"column_end":76}},{"value":"/ the boundary of the type.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":13202,"byte_end":13231,"line_start":457,"line_end":457,"column_start":2,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":13390,"byte_end":13402,"line_start":462,"line_end":462,"column_start":5,"column_end":17},"name":"wrapping_sub","qualname":"::IsInteger::wrapping_sub","value":"pub fn wrapping_sub(Self, Self) -> Self","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" Wrapping (modular) subtraction. Computes `self - rhs`, wrapping around\n at the boundary of the type.\n","sig":null,"attributes":[{"value":"/ Wrapping (modular) subtraction. Computes `self - rhs`, wrapping around","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":13277,"byte_end":13351,"line_start":460,"line_end":460,"column_start":2,"column_end":76}},{"value":"/ at the boundary of the type.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":13353,"byte_end":13385,"line_start":461,"line_end":461,"column_start":2,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":13547,"byte_end":13559,"line_start":466,"line_end":466,"column_start":5,"column_end":17},"name":"wrapping_mul","qualname":"::IsInteger::wrapping_mul","value":"pub fn wrapping_mul(Self, Self) -> Self","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" Wrapping (modular) multiplication. Computes `self * rhs`, wrapping\n around at the boundary of the type.\n","sig":null,"attributes":[{"value":"/ Wrapping (modular) multiplication. Computes `self * rhs`, wrapping","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":13431,"byte_end":13501,"line_start":464,"line_end":464,"column_start":2,"column_end":72}},{"value":"/ around at the boundary of the type.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":13503,"byte_end":13542,"line_start":465,"line_end":465,"column_start":2,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":14421,"byte_end":14433,"line_start":489,"line_end":489,"column_start":5,"column_end":17},"name":"wrapping_div","qualname":"::IsInteger::wrapping_div","value":"pub fn wrapping_div(Self, Self) -> Self","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" Wrapping (modular) division. Computes `self / rhs`, wrapping around at\n the boundary of the type.","sig":null,"attributes":[{"value":"/ Wrapping (modular) division. Computes `self / rhs`, wrapping around at","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":13588,"byte_end":13662,"line_start":468,"line_end":468,"column_start":2,"column_end":76}},{"value":"/ the boundary of the type.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":13664,"byte_end":13693,"line_start":469,"line_end":469,"column_start":2,"column_end":31}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":13695,"byte_end":13698,"line_start":470,"line_end":470,"column_start":2,"column_end":5}},{"value":"/ # Signed Integers","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":13700,"byte_end":13721,"line_start":471,"line_end":471,"column_start":2,"column_end":23}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":13723,"byte_end":13726,"line_start":472,"line_end":472,"column_start":2,"column_end":5}},{"value":"/ The only case where such wrapping can occur is when one divides","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":13728,"byte_end":13795,"line_start":473,"line_end":473,"column_start":2,"column_end":69}},{"value":"/ `MIN / -1` on a signed type (where `MIN` is the negative minimal value","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":13797,"byte_end":13871,"line_start":474,"line_end":474,"column_start":2,"column_end":76}},{"value":"/ for the type); this is equivalent to `-MIN`, a positive value that is","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":13873,"byte_end":13946,"line_start":475,"line_end":475,"column_start":2,"column_end":75}},{"value":"/ too large to represent in the type. In such a case, this function","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":13948,"byte_end":14017,"line_start":476,"line_end":476,"column_start":2,"column_end":71}},{"value":"/ returns `MIN` itself.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":14019,"byte_end":14044,"line_start":477,"line_end":477,"column_start":2,"column_end":27}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":14046,"byte_end":14049,"line_start":478,"line_end":478,"column_start":2,"column_end":5}},{"value":"/ # Unsigned Integers","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":14051,"byte_end":14074,"line_start":479,"line_end":479,"column_start":2,"column_end":25}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":14076,"byte_end":14079,"line_start":480,"line_end":480,"column_start":2,"column_end":5}},{"value":"/ Wrapping (modular) division. Computes `self / rhs`. Wrapped division on","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":14081,"byte_end":14156,"line_start":481,"line_end":481,"column_start":2,"column_end":77}},{"value":"/ unsigned types is just normal division. There’s no way wrapping could","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":14158,"byte_end":14233,"line_start":482,"line_end":482,"column_start":2,"column_end":75}},{"value":"/ ever happen. This function exists, so that all operations are accounted","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":14235,"byte_end":14310,"line_start":483,"line_end":483,"column_start":2,"column_end":77}},{"value":"/ for in the wrapping operations.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":14312,"byte_end":14347,"line_start":484,"line_end":484,"column_start":2,"column_end":37}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":14349,"byte_end":14352,"line_start":485,"line_end":485,"column_start":2,"column_end":5}},{"value":"/ # Panics","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":14354,"byte_end":14366,"line_start":486,"line_end":486,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":14368,"byte_end":14371,"line_start":487,"line_end":487,"column_start":2,"column_end":5}},{"value":"/ This function will panic if `rhs` is 0.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":14373,"byte_end":14416,"line_start":488,"line_end":488,"column_start":2,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":15337,"byte_end":15356,"line_start":512,"line_end":512,"column_start":5,"column_end":24},"name":"wrapping_div_euclid","qualname":"::IsInteger::wrapping_div_euclid","value":"pub fn wrapping_div_euclid(Self, Self) -> Self","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" Wrapping Eulidean division. Computes `self.div_euclid(rhs)`, wrapping\n around at the boundary of the type.","sig":null,"attributes":[{"value":"/ Wrapping Eulidean division. Computes `self.div_euclid(rhs)`, wrapping","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":14462,"byte_end":14535,"line_start":491,"line_end":491,"column_start":2,"column_end":75}},{"value":"/ around at the boundary of the type.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":14537,"byte_end":14576,"line_start":492,"line_end":492,"column_start":2,"column_end":41}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":14578,"byte_end":14581,"line_start":493,"line_end":493,"column_start":2,"column_end":5}},{"value":"/ # Signed Types","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":14583,"byte_end":14601,"line_start":494,"line_end":494,"column_start":2,"column_end":20}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":14603,"byte_end":14606,"line_start":495,"line_end":495,"column_start":2,"column_end":5}},{"value":"/ Wrapping will only occur in `MIN / -1` on a signed type (where `MIN` is","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":14608,"byte_end":14683,"line_start":496,"line_end":496,"column_start":2,"column_end":77}},{"value":"/ the negative minimal value for the type). This is equivalent to `-MIN`,","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":14685,"byte_end":14760,"line_start":497,"line_end":497,"column_start":2,"column_end":77}},{"value":"/ a positive value that is too large to represent in the type. In this","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":14762,"byte_end":14834,"line_start":498,"line_end":498,"column_start":2,"column_end":74}},{"value":"/ case, this method returns `MIN` itself.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":14836,"byte_end":14879,"line_start":499,"line_end":499,"column_start":2,"column_end":45}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":14881,"byte_end":14884,"line_start":500,"line_end":500,"column_start":2,"column_end":5}},{"value":"/ # Unsigned Types","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":14886,"byte_end":14906,"line_start":501,"line_end":501,"column_start":2,"column_end":22}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":14908,"byte_end":14911,"line_start":502,"line_end":502,"column_start":2,"column_end":5}},{"value":"/ Wrapped division on unsigned types is just normal division. There’s no","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":14913,"byte_end":14989,"line_start":503,"line_end":503,"column_start":2,"column_end":76}},{"value":"/ way wrapping could ever happen. This function exists, so that all","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":14991,"byte_end":15060,"line_start":504,"line_end":504,"column_start":2,"column_end":71}},{"value":"/ operations are accounted for in the wrapping operations. Since, for the","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":15062,"byte_end":15137,"line_start":505,"line_end":505,"column_start":2,"column_end":77}},{"value":"/ positive integers, all common definitions of division are equal, this is","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":15139,"byte_end":15215,"line_start":506,"line_end":506,"column_start":2,"column_end":78}},{"value":"/ exactly equal to `self.wrapping_div(rhs)`.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":15217,"byte_end":15263,"line_start":507,"line_end":507,"column_start":2,"column_end":48}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":15265,"byte_end":15268,"line_start":508,"line_end":508,"column_start":2,"column_end":5}},{"value":"/ # Panics","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":15270,"byte_end":15282,"line_start":509,"line_end":509,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":15284,"byte_end":15287,"line_start":510,"line_end":510,"column_start":2,"column_end":5}},{"value":"/ This function will panic if `rhs` is 0.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":15289,"byte_end":15332,"line_start":511,"line_end":511,"column_start":2,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":16121,"byte_end":16133,"line_start":534,"line_end":534,"column_start":5,"column_end":17},"name":"wrapping_rem","qualname":"::IsInteger::wrapping_rem","value":"pub fn wrapping_rem(Self, Self) -> Self","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" Wrapping (modular) remainder. Computes `self % rhs`, wrapping around at\n the boundary of the type.","sig":null,"attributes":[{"value":"/ Wrapping (modular) remainder. Computes `self % rhs`, wrapping around at","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":15385,"byte_end":15460,"line_start":514,"line_end":514,"column_start":2,"column_end":77}},{"value":"/ the boundary of the type.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":15462,"byte_end":15491,"line_start":515,"line_end":515,"column_start":2,"column_end":31}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":15493,"byte_end":15496,"line_start":516,"line_end":516,"column_start":2,"column_end":5}},{"value":"/ # Signed Integers","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":15498,"byte_end":15519,"line_start":517,"line_end":517,"column_start":2,"column_end":23}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":15521,"byte_end":15524,"line_start":518,"line_end":518,"column_start":2,"column_end":5}},{"value":"/ Such wrap-around never actually occurs mathematically; implementation","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":15526,"byte_end":15599,"line_start":519,"line_end":519,"column_start":2,"column_end":75}},{"value":"/ artifacts make `x % y` invalid for `MIN / -1` on a signed type (where","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":15601,"byte_end":15674,"line_start":520,"line_end":520,"column_start":2,"column_end":75}},{"value":"/ `MIN` is the negative minimal value). In such a case, this function","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":15676,"byte_end":15747,"line_start":521,"line_end":521,"column_start":2,"column_end":73}},{"value":"/ returns `0`.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":15749,"byte_end":15765,"line_start":522,"line_end":522,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":15767,"byte_end":15770,"line_start":523,"line_end":523,"column_start":2,"column_end":5}},{"value":"/ # Unsigned Integers","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":15772,"byte_end":15795,"line_start":524,"line_end":524,"column_start":2,"column_end":25}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":15797,"byte_end":15800,"line_start":525,"line_end":525,"column_start":2,"column_end":5}},{"value":"/ Wrapped remainder calculation on unsigned types is just the regular","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":15802,"byte_end":15873,"line_start":526,"line_end":526,"column_start":2,"column_end":73}},{"value":"/ remainder calculation. There’s no way wrapping could ever happen. This","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":15875,"byte_end":15951,"line_start":527,"line_end":527,"column_start":2,"column_end":76}},{"value":"/ function exists, so that all operations are accounted for in the","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":15953,"byte_end":16021,"line_start":528,"line_end":528,"column_start":2,"column_end":70}},{"value":"/ wrapping operations.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":16023,"byte_end":16047,"line_start":529,"line_end":529,"column_start":2,"column_end":26}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":16049,"byte_end":16052,"line_start":530,"line_end":530,"column_start":2,"column_end":5}},{"value":"/ # Panics","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":16054,"byte_end":16066,"line_start":531,"line_end":531,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":16068,"byte_end":16071,"line_start":532,"line_end":532,"column_start":2,"column_end":5}},{"value":"/ This function will panic if `rhs` is 0.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":16073,"byte_end":16116,"line_start":533,"line_end":533,"column_start":2,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":16971,"byte_end":16990,"line_start":557,"line_end":557,"column_start":5,"column_end":24},"name":"wrapping_rem_euclid","qualname":"::IsInteger::wrapping_rem_euclid","value":"pub fn wrapping_rem_euclid(Self, Self) -> Self","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" Wrapping Euclidean remainder. Computes `self.rem_euclid(rhs)`, wrapping\n around at the boundary of the type.","sig":null,"attributes":[{"value":"/ Wrapping Euclidean remainder. Computes `self.rem_euclid(rhs)`, wrapping","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":16162,"byte_end":16237,"line_start":536,"line_end":536,"column_start":2,"column_end":77}},{"value":"/ around at the boundary of the type.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":16239,"byte_end":16278,"line_start":537,"line_end":537,"column_start":2,"column_end":41}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":16280,"byte_end":16283,"line_start":538,"line_end":538,"column_start":2,"column_end":5}},{"value":"/ # Signed Integers","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":16285,"byte_end":16306,"line_start":539,"line_end":539,"column_start":2,"column_end":23}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":16308,"byte_end":16311,"line_start":540,"line_end":540,"column_start":2,"column_end":5}},{"value":"/ Wrapping will only occur in `MIN % -1` on a signed type (where `MIN` is","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":16313,"byte_end":16388,"line_start":541,"line_end":541,"column_start":2,"column_end":77}},{"value":"/ the negative minimal value for the type). In this case, this method","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":16390,"byte_end":16461,"line_start":542,"line_end":542,"column_start":2,"column_end":73}},{"value":"/ returns 0.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":16463,"byte_end":16477,"line_start":543,"line_end":543,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":16479,"byte_end":16482,"line_start":544,"line_end":544,"column_start":2,"column_end":5}},{"value":"/ # Unsigned Integers","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":16484,"byte_end":16507,"line_start":545,"line_end":545,"column_start":2,"column_end":25}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":16509,"byte_end":16512,"line_start":546,"line_end":546,"column_start":2,"column_end":5}},{"value":"/ Wrapped modulo calculation on unsigned types is just the regular","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":16514,"byte_end":16582,"line_start":547,"line_end":547,"column_start":2,"column_end":70}},{"value":"/ remainder calculation. There’s no way wrapping could ever happen. This","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":16584,"byte_end":16660,"line_start":548,"line_end":548,"column_start":2,"column_end":76}},{"value":"/ function exists, so that all operations are accounted for in the","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":16662,"byte_end":16730,"line_start":549,"line_end":549,"column_start":2,"column_end":70}},{"value":"/ wrapping operations. Since, for the positive integers, all common","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":16732,"byte_end":16801,"line_start":550,"line_end":550,"column_start":2,"column_end":71}},{"value":"/ definitions of division are equal, this is exactly equal to","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":16803,"byte_end":16866,"line_start":551,"line_end":551,"column_start":2,"column_end":65}},{"value":"/ `self.wrapping_rem(rhs)`.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":16868,"byte_end":16897,"line_start":552,"line_end":552,"column_start":2,"column_end":31}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":16899,"byte_end":16902,"line_start":553,"line_end":553,"column_start":2,"column_end":5}},{"value":"/ # Panics","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":16904,"byte_end":16916,"line_start":554,"line_end":554,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":16918,"byte_end":16921,"line_start":555,"line_end":555,"column_start":2,"column_end":5}},{"value":"/ This function will panic if `rhs` is 0.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":16923,"byte_end":16966,"line_start":556,"line_end":556,"column_start":2,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":17880,"byte_end":17892,"line_start":577,"line_end":577,"column_start":5,"column_end":17},"name":"wrapping_neg","qualname":"::IsInteger::wrapping_neg","value":"pub fn wrapping_neg(Self) -> Self","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" Wrapping (modular) negation. Computes `-self`, wrapping around at the\n boundary of the type.","sig":null,"attributes":[{"value":"/ Wrapping (modular) negation. Computes `-self`, wrapping around at the","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":17019,"byte_end":17092,"line_start":559,"line_end":559,"column_start":2,"column_end":75}},{"value":"/ boundary of the type.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":17094,"byte_end":17119,"line_start":560,"line_end":560,"column_start":2,"column_end":27}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":17121,"byte_end":17124,"line_start":561,"line_end":561,"column_start":2,"column_end":5}},{"value":"/ # Signed Integers","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":17126,"byte_end":17147,"line_start":562,"line_end":562,"column_start":2,"column_end":23}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":17149,"byte_end":17152,"line_start":563,"line_end":563,"column_start":2,"column_end":5}},{"value":"/ The  only case where such wrapping can occur is when one negates `MIN`","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":17154,"byte_end":17228,"line_start":564,"line_end":564,"column_start":2,"column_end":76}},{"value":"/ on a signed type (where `MIN` is the negative minimal value for the","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":17230,"byte_end":17301,"line_start":565,"line_end":565,"column_start":2,"column_end":73}},{"value":"/ type); this is a positive value that is too large to represent in the","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":17303,"byte_end":17376,"line_start":566,"line_end":566,"column_start":2,"column_end":75}},{"value":"/ type. In such a case, this function returns `MIN` itself.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":17378,"byte_end":17439,"line_start":567,"line_end":567,"column_start":2,"column_end":63}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":17441,"byte_end":17444,"line_start":568,"line_end":568,"column_start":2,"column_end":5}},{"value":"/ # Unsigned Integers","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":17446,"byte_end":17469,"line_start":569,"line_end":569,"column_start":2,"column_end":25}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":17471,"byte_end":17474,"line_start":570,"line_end":570,"column_start":2,"column_end":5}},{"value":"/ Since unsigned types do not have negative equivalents all applications","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":17476,"byte_end":17550,"line_start":571,"line_end":571,"column_start":2,"column_end":76}},{"value":"/ of this function will wrap (except for `-0`). For values smaller than","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":17552,"byte_end":17625,"line_start":572,"line_end":572,"column_start":2,"column_end":75}},{"value":"/ the corresponding signed type’s maximum the result is the same as","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":17627,"byte_end":17698,"line_start":573,"line_end":573,"column_start":2,"column_end":71}},{"value":"/ casting the corresponding signed value. Any larger values are equivalent","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":17700,"byte_end":17776,"line_start":574,"line_end":574,"column_start":2,"column_end":78}},{"value":"/ to `MAX + 1 - (val - MAX - 1)` where `MAX` is the corresponding signed","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":17778,"byte_end":17852,"line_start":575,"line_end":575,"column_start":2,"column_end":76}},{"value":"/ type’s maximum.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":17854,"byte_end":17875,"line_start":576,"line_end":576,"column_start":2,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":18433,"byte_end":18445,"line_start":588,"line_end":588,"column_start":5,"column_end":17},"name":"wrapping_shl","qualname":"::IsInteger::wrapping_shl","value":"pub fn wrapping_shl(Self, u32) -> Self","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" Panic-free bitwise shift-left; yields `self << mask(rhs)`, where `mask`\n removes any high-order bits of `rhs` that would cause the shift to\n exceed the bitwidth of the type.","sig":null,"attributes":[{"value":"/ Panic-free bitwise shift-left; yields `self << mask(rhs)`, where `mask`","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":17910,"byte_end":17985,"line_start":579,"line_end":579,"column_start":2,"column_end":77}},{"value":"/ removes any high-order bits of `rhs` that would cause the shift to","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":17987,"byte_end":18057,"line_start":580,"line_end":580,"column_start":2,"column_end":72}},{"value":"/ exceed the bitwidth of the type.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":18059,"byte_end":18095,"line_start":581,"line_end":581,"column_start":2,"column_end":38}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":18097,"byte_end":18100,"line_start":582,"line_end":582,"column_start":2,"column_end":5}},{"value":"/ Note that this is not the same as a rotate-left; the RHS of a wrapping","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":18102,"byte_end":18176,"line_start":583,"line_end":583,"column_start":2,"column_end":76}},{"value":"/ shift-left is restricted to the range of the type, rather than the bits","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":18178,"byte_end":18253,"line_start":584,"line_end":584,"column_start":2,"column_end":77}},{"value":"/ shifted out of the LHS being returned to the other end. The primitive","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":18255,"byte_end":18328,"line_start":585,"line_end":585,"column_start":2,"column_end":75}},{"value":"/ integer types all implement a `rotate_left` function, which may be what","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":18330,"byte_end":18405,"line_start":586,"line_end":586,"column_start":2,"column_end":77}},{"value":"/ you want instead.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":18407,"byte_end":18428,"line_start":587,"line_end":587,"column_start":2,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":19000,"byte_end":19012,"line_start":599,"line_end":599,"column_start":5,"column_end":17},"name":"wrapping_shr","qualname":"::IsInteger::wrapping_shr","value":"pub fn wrapping_shr(Self, u32) -> Self","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" Panic-free bitwise shift-right; yields `self >> mask(rhs)`, where `mask`\n removes any high-order bits of `rhs` that would cause the shift to\n exceed the bitwidth of the type.","sig":null,"attributes":[{"value":"/ Panic-free bitwise shift-right; yields `self >> mask(rhs)`, where `mask`","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":18473,"byte_end":18549,"line_start":590,"line_end":590,"column_start":2,"column_end":78}},{"value":"/ removes any high-order bits of `rhs` that would cause the shift to","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":18551,"byte_end":18621,"line_start":591,"line_end":591,"column_start":2,"column_end":72}},{"value":"/ exceed the bitwidth of the type.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":18623,"byte_end":18659,"line_start":592,"line_end":592,"column_start":2,"column_end":38}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":18661,"byte_end":18664,"line_start":593,"line_end":593,"column_start":2,"column_end":5}},{"value":"/ Note that this is not the same as a rotate-right; the RHS of a wrapping","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":18666,"byte_end":18741,"line_start":594,"line_end":594,"column_start":2,"column_end":77}},{"value":"/ shift-right is restricted to the range of the type, rather than the bits","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":18743,"byte_end":18819,"line_start":595,"line_end":595,"column_start":2,"column_end":78}},{"value":"/ shifted out of the LHS being returned to the other end. The primitive","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":18821,"byte_end":18894,"line_start":596,"line_end":596,"column_start":2,"column_end":75}},{"value":"/ integer types all implement a `rotate_right` function, which may be what","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":18896,"byte_end":18972,"line_start":597,"line_end":597,"column_start":2,"column_end":78}},{"value":"/ you want instead.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":18974,"byte_end":18995,"line_start":598,"line_end":598,"column_start":2,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":19159,"byte_end":19171,"line_start":603,"line_end":603,"column_start":5,"column_end":17},"name":"wrapping_pow","qualname":"::IsInteger::wrapping_pow","value":"pub fn wrapping_pow(Self, u32) -> Self","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" Wrapping (modular) exponentiation. Computes `self.pow(exp)`, wrapping\n around at the boundary of the type.\n","sig":null,"attributes":[{"value":"/ Wrapping (modular) exponentiation. Computes `self.pow(exp)`, wrapping","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":19040,"byte_end":19113,"line_start":601,"line_end":601,"column_start":2,"column_end":75}},{"value":"/ around at the boundary of the type.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":19115,"byte_end":19154,"line_start":602,"line_end":602,"column_start":2,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":19430,"byte_end":19445,"line_start":610,"line_end":610,"column_start":5,"column_end":20},"name":"overflowing_add","qualname":"::IsInteger::overflowing_add","value":"pub fn overflowing_add(Self, Self) -> (Self, bool)","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" Calculates `self + rhs`","sig":null,"attributes":[{"value":"/ Calculates `self + rhs`","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":19199,"byte_end":19226,"line_start":605,"line_end":605,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":19228,"byte_end":19231,"line_start":606,"line_end":606,"column_start":2,"column_end":5}},{"value":"/ Returns a tuple of the addition along with a boolean indicating whether","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":19233,"byte_end":19308,"line_start":607,"line_end":607,"column_start":2,"column_end":77}},{"value":"/ an arithmetic overflow would occur. If an overflow would have occurred","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":19310,"byte_end":19384,"line_start":608,"line_end":608,"column_start":2,"column_end":76}},{"value":"/ then the wrapped value is returned.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":19386,"byte_end":19425,"line_start":609,"line_end":609,"column_start":2,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":19716,"byte_end":19731,"line_start":617,"line_end":617,"column_start":5,"column_end":20},"name":"overflowing_sub","qualname":"::IsInteger::overflowing_sub","value":"pub fn overflowing_sub(Self, Self) -> (Self, bool)","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" Calculates `self - rhs`","sig":null,"attributes":[{"value":"/ Calculates `self - rhs`","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":19482,"byte_end":19509,"line_start":612,"line_end":612,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":19511,"byte_end":19514,"line_start":613,"line_end":613,"column_start":2,"column_end":5}},{"value":"/ Returns a tuple of the subtraction along with a boolean indicating","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":19516,"byte_end":19586,"line_start":614,"line_end":614,"column_start":2,"column_end":72}},{"value":"/ whether an arithmetic overflow would occur. If an overflow would have","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":19588,"byte_end":19661,"line_start":615,"line_end":615,"column_start":2,"column_end":75}},{"value":"/ occurred then the wrapped value is returned.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":19663,"byte_end":19711,"line_start":616,"line_end":616,"column_start":2,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":20032,"byte_end":20047,"line_start":624,"line_end":624,"column_start":5,"column_end":20},"name":"overflowing_mul","qualname":"::IsInteger::overflowing_mul","value":"pub fn overflowing_mul(Self, Self) -> (Self, bool)","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" Calculates the multiplication of `self` and `rhs`.","sig":null,"attributes":[{"value":"/ Calculates the multiplication of `self` and `rhs`.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":19768,"byte_end":19822,"line_start":619,"line_end":619,"column_start":2,"column_end":56}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":19824,"byte_end":19827,"line_start":620,"line_end":620,"column_start":2,"column_end":5}},{"value":"/ Returns a tuple of the multiplication along with a boolean indicating","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":19829,"byte_end":19902,"line_start":621,"line_end":621,"column_start":2,"column_end":75}},{"value":"/ whether an arithmetic overflow would occur. If an overflow would have","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":19904,"byte_end":19977,"line_start":622,"line_end":622,"column_start":2,"column_end":75}},{"value":"/ occurred then the wrapped value is returned.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":19979,"byte_end":20027,"line_start":623,"line_end":623,"column_start":2,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":20394,"byte_end":20409,"line_start":635,"line_end":635,"column_start":5,"column_end":20},"name":"overflowing_div","qualname":"::IsInteger::overflowing_div","value":"pub fn overflowing_div(Self, Self) -> (Self, bool)","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" Calculates the divisor when `self` is divided by `rhs`.","sig":null,"attributes":[{"value":"/ Calculates the divisor when `self` is divided by `rhs`.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":20084,"byte_end":20143,"line_start":626,"line_end":626,"column_start":2,"column_end":61}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":20145,"byte_end":20148,"line_start":627,"line_end":627,"column_start":2,"column_end":5}},{"value":"/ Returns a tuple of the divisor along with a boolean indicating whether","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":20150,"byte_end":20224,"line_start":628,"line_end":628,"column_start":2,"column_end":76}},{"value":"/ an arithmetic overflow would occur. If an overflow would occur then self","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":20226,"byte_end":20302,"line_start":629,"line_end":629,"column_start":2,"column_end":78}},{"value":"/ is returned.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":20304,"byte_end":20320,"line_start":630,"line_end":630,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":20322,"byte_end":20325,"line_start":631,"line_end":631,"column_start":2,"column_end":5}},{"value":"/ # Panics","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":20327,"byte_end":20339,"line_start":632,"line_end":632,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":20341,"byte_end":20344,"line_start":633,"line_end":633,"column_start":2,"column_end":5}},{"value":"/ This function will panic if `rhs` is 0.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":20346,"byte_end":20389,"line_start":634,"line_end":634,"column_start":2,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":20770,"byte_end":20792,"line_start":646,"line_end":646,"column_start":5,"column_end":27},"name":"overflowing_div_euclid","qualname":"::IsInteger::overflowing_div_euclid","value":"pub fn overflowing_div_euclid(Self, Self) -> (Self, bool)","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" Calculates the quotient of Euclidean division `self.div_euclid(rhs)`.","sig":null,"attributes":[{"value":"/ Calculates the quotient of Euclidean division `self.div_euclid(rhs)`.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":20446,"byte_end":20519,"line_start":637,"line_end":637,"column_start":2,"column_end":75}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":20521,"byte_end":20524,"line_start":638,"line_end":638,"column_start":2,"column_end":5}},{"value":"/ Returns a tuple of the divisor along with a boolean indicating whether","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":20526,"byte_end":20600,"line_start":639,"line_end":639,"column_start":2,"column_end":76}},{"value":"/ an arithmetic overflow would occur. If an overflow would occur then self","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":20602,"byte_end":20678,"line_start":640,"line_end":640,"column_start":2,"column_end":78}},{"value":"/ is returned.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":20680,"byte_end":20696,"line_start":641,"line_end":641,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":20698,"byte_end":20701,"line_start":642,"line_end":642,"column_start":2,"column_end":5}},{"value":"/ # Panics","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":20703,"byte_end":20715,"line_start":643,"line_end":643,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":20717,"byte_end":20720,"line_start":644,"line_end":644,"column_start":2,"column_end":5}},{"value":"/ This function will panic if `rhs` is 0.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":20722,"byte_end":20765,"line_start":645,"line_end":645,"column_start":2,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":21155,"byte_end":21170,"line_start":657,"line_end":657,"column_start":5,"column_end":20},"name":"overflowing_rem","qualname":"::IsInteger::overflowing_rem","value":"pub fn overflowing_rem(Self, Self) -> (Self, bool)","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" Calculates the remainder when `self` is divided by `rhs`.","sig":null,"attributes":[{"value":"/ Calculates the remainder when `self` is divided by `rhs`.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":20829,"byte_end":20890,"line_start":648,"line_end":648,"column_start":2,"column_end":63}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":20892,"byte_end":20895,"line_start":649,"line_end":649,"column_start":2,"column_end":5}},{"value":"/ Returns a tuple of the remainder after dividing along with a boolean","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":20897,"byte_end":20969,"line_start":650,"line_end":650,"column_start":2,"column_end":74}},{"value":"/ indicating whether an arithmetic overflow would occur. If an overflow","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":20971,"byte_end":21044,"line_start":651,"line_end":651,"column_start":2,"column_end":75}},{"value":"/ would occur then 0 is returned.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":21046,"byte_end":21081,"line_start":652,"line_end":652,"column_start":2,"column_end":37}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":21083,"byte_end":21086,"line_start":653,"line_end":653,"column_start":2,"column_end":5}},{"value":"/ # Panics","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":21088,"byte_end":21100,"line_start":654,"line_end":654,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":21102,"byte_end":21105,"line_start":655,"line_end":655,"column_start":2,"column_end":5}},{"value":"/ This function will panic if `rhs` is 0.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":21107,"byte_end":21150,"line_start":656,"line_end":656,"column_start":2,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":21541,"byte_end":21563,"line_start":668,"line_end":668,"column_start":5,"column_end":27},"name":"overflowing_rem_euclid","qualname":"::IsInteger::overflowing_rem_euclid","value":"pub fn overflowing_rem_euclid(Self, Self) -> (Self, bool)","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" Overflowing Euclidean remainder. Calculates `self.rem_euclid(rhs)`.","sig":null,"attributes":[{"value":"/ Overflowing Euclidean remainder. Calculates `self.rem_euclid(rhs)`.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":21207,"byte_end":21278,"line_start":659,"line_end":659,"column_start":2,"column_end":73}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":21280,"byte_end":21283,"line_start":660,"line_end":660,"column_start":2,"column_end":5}},{"value":"/ Returns a tuple of the remainder after dividing along with a boolean","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":21285,"byte_end":21357,"line_start":661,"line_end":661,"column_start":2,"column_end":74}},{"value":"/ indicating whether an arithmetic overflow would occur. If an overflow","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":21359,"byte_end":21432,"line_start":662,"line_end":662,"column_start":2,"column_end":75}},{"value":"/ would occur then 0 is returned.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":21434,"byte_end":21469,"line_start":663,"line_end":663,"column_start":2,"column_end":37}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":21471,"byte_end":21474,"line_start":664,"line_end":664,"column_start":2,"column_end":5}},{"value":"/ # Panics","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":21476,"byte_end":21488,"line_start":665,"line_end":665,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":21490,"byte_end":21493,"line_start":666,"line_end":666,"column_start":2,"column_end":5}},{"value":"/ This function will panic if rhs is 0.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":21495,"byte_end":21536,"line_start":667,"line_end":667,"column_start":2,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":21984,"byte_end":21999,"line_start":676,"line_end":676,"column_start":5,"column_end":20},"name":"overflowing_neg","qualname":"::IsInteger::overflowing_neg","value":"pub fn overflowing_neg(Self) -> (Self, bool)","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" Negates self, overflowing if this is equal to the minimum value.","sig":null,"attributes":[{"value":"/ Negates self, overflowing if this is equal to the minimum value.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":21600,"byte_end":21668,"line_start":670,"line_end":670,"column_start":2,"column_end":70}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":21670,"byte_end":21673,"line_start":671,"line_end":671,"column_start":2,"column_end":5}},{"value":"/ Returns a tuple of the negated version of self along with a boolean","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":21675,"byte_end":21746,"line_start":672,"line_end":672,"column_start":2,"column_end":73}},{"value":"/ indicating whether an overflow happened. If `self` is the minimum value","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":21748,"byte_end":21823,"line_start":673,"line_end":673,"column_start":2,"column_end":77}},{"value":"/ (e.g., `i32::MIN` for values of type `i32`), then the minimum value will","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":21825,"byte_end":21901,"line_start":674,"line_end":674,"column_start":2,"column_end":78}},{"value":"/ be returned again and `true` will be returned for an overflow happening.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":21903,"byte_end":21979,"line_start":675,"line_end":675,"column_start":2,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":22387,"byte_end":22402,"line_start":685,"line_end":685,"column_start":5,"column_end":20},"name":"overflowing_shl","qualname":"::IsInteger::overflowing_shl","value":"pub fn overflowing_shl(Self, u32) -> (Self, bool)","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" Shifts self left by `rhs` bits.","sig":null,"attributes":[{"value":"/ Shifts self left by `rhs` bits.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":22025,"byte_end":22060,"line_start":678,"line_end":678,"column_start":2,"column_end":37}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":22062,"byte_end":22065,"line_start":679,"line_end":679,"column_start":2,"column_end":5}},{"value":"/ Returns a tuple of the shifted version of self along with a boolean","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":22067,"byte_end":22138,"line_start":680,"line_end":680,"column_start":2,"column_end":73}},{"value":"/ indicating whether the shift value was larger than or equal to the","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":22140,"byte_end":22210,"line_start":681,"line_end":681,"column_start":2,"column_end":72}},{"value":"/ number of bits. If the shift value is too large, then value is masked","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":22212,"byte_end":22285,"line_start":682,"line_end":682,"column_start":2,"column_end":75}},{"value":"/ (N-1) where N is the number of bits, and this value is then used to","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":22287,"byte_end":22358,"line_start":683,"line_end":683,"column_start":2,"column_end":73}},{"value":"/ perform the shift.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":22360,"byte_end":22382,"line_start":684,"line_end":684,"column_start":2,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":22801,"byte_end":22816,"line_start":694,"line_end":694,"column_start":5,"column_end":20},"name":"overflowing_shr","qualname":"::IsInteger::overflowing_shr","value":"pub fn overflowing_shr(Self, u32) -> (Self, bool)","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" Shifts self right by `rhs` bits.","sig":null,"attributes":[{"value":"/ Shifts self right by `rhs` bits.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":22438,"byte_end":22474,"line_start":687,"line_end":687,"column_start":2,"column_end":38}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":22476,"byte_end":22479,"line_start":688,"line_end":688,"column_start":2,"column_end":5}},{"value":"/ Returns a tuple of the shifted version of self along with a boolean","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":22481,"byte_end":22552,"line_start":689,"line_end":689,"column_start":2,"column_end":73}},{"value":"/ indicating whether the shift value was larger than or equal to the","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":22554,"byte_end":22624,"line_start":690,"line_end":690,"column_start":2,"column_end":72}},{"value":"/ number of bits. If the shift value is too large, then value is masked","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":22626,"byte_end":22699,"line_start":691,"line_end":691,"column_start":2,"column_end":75}},{"value":"/ (N-1) where N is the number of bits, and this value is then used to","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":22701,"byte_end":22772,"line_start":692,"line_end":692,"column_start":2,"column_end":73}},{"value":"/ perform the shift.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":22774,"byte_end":22796,"line_start":693,"line_end":693,"column_start":2,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":23041,"byte_end":23056,"line_start":700,"line_end":700,"column_start":5,"column_end":20},"name":"overflowing_pow","qualname":"::IsInteger::overflowing_pow","value":"pub fn overflowing_pow(Self, u32) -> (Self, bool)","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" Raises self to the power of `exp`, using exponentiation by squaring.","sig":null,"attributes":[{"value":"/ Raises self to the power of `exp`, using exponentiation by squaring.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":22852,"byte_end":22924,"line_start":696,"line_end":696,"column_start":2,"column_end":74}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":22926,"byte_end":22929,"line_start":697,"line_end":697,"column_start":2,"column_end":5}},{"value":"/ Returns a tuple of the exponentiation along with a bool indicating","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":22931,"byte_end":23001,"line_start":698,"line_end":698,"column_start":2,"column_end":72}},{"value":"/ whether an overflow happened.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":23003,"byte_end":23036,"line_start":699,"line_end":699,"column_start":2,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":23169,"byte_end":23172,"line_start":703,"line_end":703,"column_start":5,"column_end":8},"name":"pow","qualname":"::IsInteger::pow","value":"pub fn pow(Self, u32) -> Self","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" Raises self to the power of `exp`, using exponentiation by squaring.\n","sig":null,"attributes":[{"value":"/ Raises self to the power of `exp`, using exponentiation by squaring.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":23092,"byte_end":23164,"line_start":702,"line_end":702,"column_start":2,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":23779,"byte_end":23789,"line_start":720,"line_end":720,"column_start":5,"column_end":15},"name":"div_euclid","qualname":"::IsInteger::div_euclid","value":"pub fn div_euclid(Self, Self) -> Self","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" Calculates the quotient of Euclidean division of self by rhs.","sig":null,"attributes":[{"value":"/ Calculates the quotient of Euclidean division of self by rhs.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":23200,"byte_end":23265,"line_start":705,"line_end":705,"column_start":2,"column_end":67}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":23267,"byte_end":23270,"line_start":706,"line_end":706,"column_start":2,"column_end":5}},{"value":"/ This computes the integer `n` such that","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":23272,"byte_end":23315,"line_start":707,"line_end":707,"column_start":2,"column_end":45}},{"value":"/ `self = n * rhs + self.rem_euclid(rhs)`, with","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":23317,"byte_end":23366,"line_start":708,"line_end":708,"column_start":2,"column_end":51}},{"value":"/ `0 <= self.rem_euclid(rhs) < rhs`.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":23368,"byte_end":23406,"line_start":709,"line_end":709,"column_start":2,"column_end":40}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":23408,"byte_end":23411,"line_start":710,"line_end":710,"column_start":2,"column_end":5}},{"value":"/ In other words, the result is `self / rhs` rounded to the integer `n`","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":23413,"byte_end":23486,"line_start":711,"line_end":711,"column_start":2,"column_end":75}},{"value":"/ such that `self >= n * rhs`. If `self > 0`, this is equal to round","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":23488,"byte_end":23558,"line_start":712,"line_end":712,"column_start":2,"column_end":72}},{"value":"/ towards zero (the default in Rust); if `self < 0`, this is equal to","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":23560,"byte_end":23631,"line_start":713,"line_end":713,"column_start":2,"column_end":73}},{"value":"/ round towards +/- infinity.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":23633,"byte_end":23664,"line_start":714,"line_end":714,"column_start":2,"column_end":33}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":23666,"byte_end":23669,"line_start":715,"line_end":715,"column_start":2,"column_end":5}},{"value":"/ # Panics","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":23671,"byte_end":23683,"line_start":716,"line_end":716,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":23685,"byte_end":23688,"line_start":717,"line_end":717,"column_start":2,"column_end":5}},{"value":"/ This function will panic if `rhs` is 0 or the division results in","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":23690,"byte_end":23759,"line_start":718,"line_end":718,"column_start":2,"column_end":71}},{"value":"/ overflow.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":23761,"byte_end":23774,"line_start":719,"line_end":719,"column_start":2,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":24178,"byte_end":24188,"line_start":732,"line_end":732,"column_start":5,"column_end":15},"name":"rem_euclid","qualname":"::IsInteger::rem_euclid","value":"pub fn rem_euclid(Self, Self) -> Self","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" Calculates the least nonnegative remainder of `self (mod rhs)`.","sig":null,"attributes":[{"value":"/ Calculates the least nonnegative remainder of `self (mod rhs)`.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":23818,"byte_end":23885,"line_start":722,"line_end":722,"column_start":2,"column_end":69}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":23887,"byte_end":23890,"line_start":723,"line_end":723,"column_start":2,"column_end":5}},{"value":"/ This is done as if by the Euclidean division algorithm -- given","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":23892,"byte_end":23959,"line_start":724,"line_end":724,"column_start":2,"column_end":69}},{"value":"/ `r = self.rem_euclid(rhs)`, `self = rhs * self.div_euclid(rhs) + r`, and","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":23961,"byte_end":24037,"line_start":725,"line_end":725,"column_start":2,"column_end":78}},{"value":"/ `0 <= r < abs(rhs)`.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":24039,"byte_end":24063,"line_start":726,"line_end":726,"column_start":2,"column_end":26}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":24065,"byte_end":24068,"line_start":727,"line_end":727,"column_start":2,"column_end":5}},{"value":"/ # Panics","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":24070,"byte_end":24082,"line_start":728,"line_end":728,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":24084,"byte_end":24087,"line_start":729,"line_end":729,"column_start":2,"column_end":5}},{"value":"/ This function will panic if `rhs` is 0 or the division results in","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":24089,"byte_end":24158,"line_start":730,"line_end":730,"column_start":2,"column_end":71}},{"value":"/ overflow.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":24160,"byte_end":24173,"line_start":731,"line_end":731,"column_start":2,"column_end":15}}]},{"kind":"Trait","id":{"krate":0,"index":181},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":24273,"byte_end":24281,"line_start":736,"line_end":736,"column_start":11,"column_end":19},"name":"IsSigned","qualname":"::IsSigned","value":"IsSigned: IsInteger + Neg","parent":null,"children":[{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188}],"decl_id":null,"docs":" Declare that a type is a signed integer.\n","sig":null,"attributes":[{"value":"/ Declare that a type is a signed integer.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":24218,"byte_end":24262,"line_start":735,"line_end":735,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":24397,"byte_end":24408,"line_start":739,"line_end":739,"column_start":5,"column_end":16},"name":"checked_abs","qualname":"::IsSigned::checked_abs","value":"pub fn checked_abs(Self) -> Option<Self>","parent":{"krate":0,"index":181},"children":[],"decl_id":null,"docs":" Checked absolute value. Computes `self.abs()`, returning `None` if\n `self == MIN`.\n","sig":null,"attributes":[{"value":"/ Checked absolute value. Computes `self.abs()`, returning `None` if","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":24302,"byte_end":24372,"line_start":737,"line_end":737,"column_start":2,"column_end":72}},{"value":"/ `self == MIN`.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":24374,"byte_end":24392,"line_start":738,"line_end":738,"column_start":2,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":24820,"byte_end":24832,"line_start":748,"line_end":748,"column_start":5,"column_end":17},"name":"wrapping_abs","qualname":"::IsSigned::wrapping_abs","value":"pub fn wrapping_abs(Self) -> Self","parent":{"krate":0,"index":181},"children":[],"decl_id":null,"docs":" Wrapping (modular) absolute value. Computes `self.abs()`, wrapping\n around at the boundary of the type.","sig":null,"attributes":[{"value":"/ Wrapping (modular) absolute value. Computes `self.abs()`, wrapping","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":24434,"byte_end":24504,"line_start":741,"line_end":741,"column_start":2,"column_end":72}},{"value":"/ around at the boundary of the type.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":24506,"byte_end":24545,"line_start":742,"line_end":742,"column_start":2,"column_end":41}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":24547,"byte_end":24550,"line_start":743,"line_end":743,"column_start":2,"column_end":5}},{"value":"/ The only case where such wrapping can occur is when one takes the","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":24552,"byte_end":24621,"line_start":744,"line_end":744,"column_start":2,"column_end":71}},{"value":"/ absolute value of the negative minimal value for the type this is a","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":24623,"byte_end":24694,"line_start":745,"line_end":745,"column_start":2,"column_end":73}},{"value":"/ positive value that is too large to represent in the type. In such a","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":24696,"byte_end":24768,"line_start":746,"line_end":746,"column_start":2,"column_end":74}},{"value":"/ case, this function returns `MIN` itself.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":24770,"byte_end":24815,"line_start":747,"line_end":747,"column_start":2,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":25199,"byte_end":25214,"line_start":756,"line_end":756,"column_start":5,"column_end":20},"name":"overflowing_abs","qualname":"::IsSigned::overflowing_abs","value":"pub fn overflowing_abs(Self) -> (Self, bool)","parent":{"krate":0,"index":181},"children":[],"decl_id":null,"docs":" Computes the absolute value of `self`.","sig":null,"attributes":[{"value":"/ Computes the absolute value of `self`.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":24850,"byte_end":24892,"line_start":750,"line_end":750,"column_start":2,"column_end":44}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":24894,"byte_end":24897,"line_start":751,"line_end":751,"column_start":2,"column_end":5}},{"value":"/ Returns a tuple of the absolute version of self along with a boolean","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":24899,"byte_end":24971,"line_start":752,"line_end":752,"column_start":2,"column_end":74}},{"value":"/ indicating whether an overflow happened. If self is the minimum value","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":24973,"byte_end":25046,"line_start":753,"line_end":753,"column_start":2,"column_end":75}},{"value":"/ (e.g., iN::MIN for values of type iN), then the minimum value will be","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":25048,"byte_end":25121,"line_start":754,"line_end":754,"column_start":2,"column_end":75}},{"value":"/ returned again and true will be returned for an overflow happening.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":25123,"byte_end":25194,"line_start":755,"line_end":755,"column_start":2,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":25605,"byte_end":25608,"line_start":766,"line_end":766,"column_start":5,"column_end":8},"name":"abs","qualname":"::IsSigned::abs","value":"pub fn abs(Self) -> Self","parent":{"krate":0,"index":181},"children":[],"decl_id":null,"docs":"\n # Overflow behavior","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":25283,"byte_end":25286,"line_start":759,"line_end":759,"column_start":2,"column_end":5}},{"value":"/ # Overflow behavior","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":25288,"byte_end":25311,"line_start":760,"line_end":760,"column_start":2,"column_end":25}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":25313,"byte_end":25316,"line_start":761,"line_end":761,"column_start":2,"column_end":5}},{"value":"/ The absolute value of `iN::min_value()` cannot be represented as an","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":25318,"byte_end":25389,"line_start":762,"line_end":762,"column_start":2,"column_end":73}},{"value":"/ `iN`, and attempting to calculate it will cause an overflow. This means","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":25391,"byte_end":25466,"line_start":763,"line_end":763,"column_start":2,"column_end":77}},{"value":"/ that code in debug mode will trigger a panic on this case and optimized","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":25468,"byte_end":25543,"line_start":764,"line_end":764,"column_start":2,"column_end":77}},{"value":"/ code will return `iN::min_value()` without a panic.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":25545,"byte_end":25600,"line_start":765,"line_end":765,"column_start":2,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":25793,"byte_end":25799,"line_start":773,"line_end":773,"column_start":5,"column_end":11},"name":"signum","qualname":"::IsSigned::signum","value":"pub fn signum(Self) -> Self","parent":{"krate":0,"index":181},"children":[],"decl_id":null,"docs":" Returns a number representing sign of `self`.","sig":null,"attributes":[{"value":"/ Returns a number representing sign of `self`.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":25626,"byte_end":25675,"line_start":768,"line_end":768,"column_start":2,"column_end":51}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":25677,"byte_end":25680,"line_start":769,"line_end":769,"column_start":2,"column_end":5}},{"value":"/ - `0` if the number is zero","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":25682,"byte_end":25713,"line_start":770,"line_end":770,"column_start":2,"column_end":33}},{"value":"/ - `1` if the number is positive","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":25715,"byte_end":25750,"line_start":771,"line_end":771,"column_start":2,"column_end":37}},{"value":"/ - `-1` if the number is negative","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":25752,"byte_end":25788,"line_start":772,"line_end":772,"column_start":2,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":25914,"byte_end":25925,"line_start":777,"line_end":777,"column_start":5,"column_end":16},"name":"is_positive","qualname":"::IsSigned::is_positive","value":"pub fn is_positive(Self) -> bool","parent":{"krate":0,"index":181},"children":[],"decl_id":null,"docs":" Returns `true` if `self` is positive and `false` if the number is zero\n or negative.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is positive and `false` if the number is zero","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":25817,"byte_end":25891,"line_start":775,"line_end":775,"column_start":2,"column_end":76}},{"value":"/ or negative.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":25893,"byte_end":25909,"line_start":776,"line_end":776,"column_start":2,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":26040,"byte_end":26051,"line_start":781,"line_end":781,"column_start":5,"column_end":16},"name":"is_negative","qualname":"::IsSigned::is_negative","value":"pub fn is_negative(Self) -> bool","parent":{"krate":0,"index":181},"children":[],"decl_id":null,"docs":" Returns `true` if `self` is negative and `false` if the number is zero\n or positive.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is negative and `false` if the number is zero","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":25943,"byte_end":26017,"line_start":779,"line_end":779,"column_start":2,"column_end":76}},{"value":"/ or positive.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":26019,"byte_end":26035,"line_start":780,"line_end":780,"column_start":2,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":189},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":26128,"byte_end":26138,"line_start":785,"line_end":785,"column_start":11,"column_end":21},"name":"IsUnsigned","qualname":"::IsUnsigned","value":"IsUnsigned: IsInteger","parent":null,"children":[{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192}],"decl_id":null,"docs":" Declare that a type is an unsigned integer.\n","sig":null,"attributes":[{"value":"/ Declare that a type is an unsigned integer.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":26070,"byte_end":26117,"line_start":784,"line_end":784,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":26219,"byte_end":26234,"line_start":787,"line_end":787,"column_start":5,"column_end":20},"name":"is_power_of_two","qualname":"::IsUnsigned::is_power_of_two","value":"pub fn is_power_of_two(Self) -> bool","parent":{"krate":0,"index":189},"children":[],"decl_id":null,"docs":" Returns `true` if and only if `self == 2^k` for some `k`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if and only if `self == 2^k` for some `k`.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":26153,"byte_end":26214,"line_start":786,"line_end":786,"column_start":2,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":26544,"byte_end":26561,"line_start":794,"line_end":794,"column_start":5,"column_end":22},"name":"next_power_of_two","qualname":"::IsUnsigned::next_power_of_two","value":"pub fn next_power_of_two(Self) -> Self","parent":{"krate":0,"index":189},"children":[],"decl_id":null,"docs":" Returns the smallest power of two greater than or equal to `self`.","sig":null,"attributes":[{"value":"/ Returns the smallest power of two greater than or equal to `self`.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":26252,"byte_end":26322,"line_start":789,"line_end":789,"column_start":2,"column_end":72}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":26324,"byte_end":26327,"line_start":790,"line_end":790,"column_start":2,"column_end":5}},{"value":"/ When return value overflows (i.e., `self > (1 << (N-1))` for type `uN`),","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":26329,"byte_end":26405,"line_start":791,"line_end":791,"column_start":2,"column_end":78}},{"value":"/ it panics in debug mode and return value is wrapped to 0 in release mode","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":26407,"byte_end":26483,"line_start":792,"line_end":792,"column_start":2,"column_end":78}},{"value":"/ (the only situation in which method can return 0).","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":26485,"byte_end":26539,"line_start":793,"line_end":793,"column_start":2,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":26799,"byte_end":26824,"line_start":799,"line_end":799,"column_start":5,"column_end":30},"name":"checked_next_power_of_two","qualname":"::IsUnsigned::checked_next_power_of_two","value":"pub fn checked_next_power_of_two(Self) -> Option<Self>","parent":{"krate":0,"index":189},"children":[],"decl_id":null,"docs":" Returns the smallest power of two greater than or equal to `n`. If the\n next power of two is greater than the type’s maximum value, `None` is\n returned, otherwise the power of two is wrapped in `Some`.\n","sig":null,"attributes":[{"value":"/ Returns the smallest power of two greater than or equal to `n`. If the","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":26579,"byte_end":26653,"line_start":796,"line_end":796,"column_start":2,"column_end":76}},{"value":"/ next power of two is greater than the type’s maximum value, `None` is","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":26655,"byte_end":26730,"line_start":797,"line_end":797,"column_start":2,"column_end":75}},{"value":"/ returned, otherwise the power of two is wrapped in `Some`.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":26732,"byte_end":26794,"line_start":798,"line_end":798,"column_start":2,"column_end":64}}]},{"kind":"Trait","id":{"krate":0,"index":193},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":26913,"byte_end":26920,"line_start":803,"line_end":803,"column_start":11,"column_end":18},"name":"IsFloat","qualname":"::IsFloat","value":"IsFloat: IsNumber + LowerExp + UpperExp + Neg + From<f32> + From<i8> + From<i16> +\nFrom<u8> + From<u16>","parent":null,"children":[{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238}],"decl_id":null,"docs":" Declare that a type is a floating-point number.\n","sig":null,"attributes":[{"value":"/ Declare that a type is a floating-point number.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":26851,"byte_end":26902,"line_start":802,"line_end":802,"column_start":1,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":194},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":27094,"byte_end":27097,"line_start":815,"line_end":815,"column_start":7,"column_end":10},"name":"Raw","qualname":"::IsFloat::Raw","value":"type Raw: IsUnsigned;","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" The unsigned integer type of the same width as `Self`.\n","sig":null,"attributes":[{"value":"/ The unsigned integer type of the same width as `Self`.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":27029,"byte_end":27087,"line_start":814,"line_end":814,"column_start":2,"column_end":60}}]},{"kind":"Const","id":{"krate":0,"index":195},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":27183,"byte_end":27188,"line_start":818,"line_end":818,"column_start":8,"column_end":13},"name":"RADIX","qualname":"::IsFloat::RADIX","value":"u32","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" The radix or base of the internal representation of `f32`.\n","sig":null,"attributes":[{"value":"/ The radix or base of the internal representation of `f32`.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":27113,"byte_end":27175,"line_start":817,"line_end":817,"column_start":2,"column_end":64}}]},{"kind":"Const","id":{"krate":0,"index":196},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":27248,"byte_end":27263,"line_start":821,"line_end":821,"column_start":8,"column_end":23},"name":"MANTISSA_DIGITS","qualname":"::IsFloat::MANTISSA_DIGITS","value":"u32","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" Number of significant digits in base 2.\n","sig":null,"attributes":[{"value":"/ Number of significant digits in base 2.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":27197,"byte_end":27240,"line_start":820,"line_end":820,"column_start":2,"column_end":45}}]},{"kind":"Const","id":{"krate":0,"index":197},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":27336,"byte_end":27342,"line_start":824,"line_end":824,"column_start":8,"column_end":14},"name":"DIGITS","qualname":"::IsFloat::DIGITS","value":"u32","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" Approximate number of significant digits in base 10.\n","sig":null,"attributes":[{"value":"/ Approximate number of significant digits in base 10.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":27272,"byte_end":27328,"line_start":823,"line_end":823,"column_start":2,"column_end":58}}]},{"kind":"Const","id":{"krate":0,"index":198},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":27566,"byte_end":27573,"line_start":832,"line_end":832,"column_start":8,"column_end":15},"name":"EPSILON","qualname":"::IsFloat::EPSILON","value":"Self","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" [Machine epsilon] value for `f32`.","sig":null,"attributes":[{"value":"/ [Machine epsilon] value for `f32`.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":27351,"byte_end":27389,"line_start":826,"line_end":826,"column_start":2,"column_end":40}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":27391,"byte_end":27394,"line_start":827,"line_end":827,"column_start":2,"column_end":5}},{"value":"/ This is the difference between `1.0` and the next larger representable","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":27396,"byte_end":27470,"line_start":828,"line_end":828,"column_start":2,"column_end":76}},{"value":"/ number.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":27472,"byte_end":27483,"line_start":829,"line_end":829,"column_start":2,"column_end":13}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":27485,"byte_end":27488,"line_start":830,"line_end":830,"column_start":2,"column_end":5}},{"value":"/ [Machine epsilon]: https://en.wikipedia.org/wiki/Machine_epsilon","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":27490,"byte_end":27558,"line_start":831,"line_end":831,"column_start":2,"column_end":70}}]},{"kind":"Const","id":{"krate":0,"index":199},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":27623,"byte_end":27626,"line_start":835,"line_end":835,"column_start":8,"column_end":11},"name":"MIN","qualname":"::IsFloat::MIN","value":"Self","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" Smallest finite `f32` value.\n","sig":null,"attributes":[{"value":"/ Smallest finite `f32` value.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":27583,"byte_end":27615,"line_start":834,"line_end":834,"column_start":2,"column_end":34}}]},{"kind":"Const","id":{"krate":0,"index":200},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":27685,"byte_end":27697,"line_start":838,"line_end":838,"column_start":8,"column_end":20},"name":"MIN_POSITIVE","qualname":"::IsFloat::MIN_POSITIVE","value":"Self","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" Smallest positive normal `f32` value.\n","sig":null,"attributes":[{"value":"/ Smallest positive normal `f32` value.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":27636,"byte_end":27677,"line_start":837,"line_end":837,"column_start":2,"column_end":43}}]},{"kind":"Const","id":{"krate":0,"index":201},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":27746,"byte_end":27749,"line_start":841,"line_end":841,"column_start":8,"column_end":11},"name":"MAX","qualname":"::IsFloat::MAX","value":"Self","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" Largest finite `f32` value.\n","sig":null,"attributes":[{"value":"/ Largest finite `f32` value.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":27707,"byte_end":27738,"line_start":840,"line_end":840,"column_start":2,"column_end":33}}]},{"kind":"Const","id":{"krate":0,"index":202},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":27836,"byte_end":27843,"line_start":844,"line_end":844,"column_start":8,"column_end":15},"name":"MIN_EXP","qualname":"::IsFloat::MIN_EXP","value":"i32","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" One greater than the minimum possible normal power of 2 exponent.\n","sig":null,"attributes":[{"value":"/ One greater than the minimum possible normal power of 2 exponent.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":27759,"byte_end":27828,"line_start":843,"line_end":843,"column_start":2,"column_end":71}}]},{"kind":"Const","id":{"krate":0,"index":203},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":27901,"byte_end":27908,"line_start":847,"line_end":847,"column_start":8,"column_end":15},"name":"MAX_EXP","qualname":"::IsFloat::MAX_EXP","value":"i32","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" Maximum possible power of 2 exponent.\n","sig":null,"attributes":[{"value":"/ Maximum possible power of 2 exponent.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":27852,"byte_end":27893,"line_start":846,"line_end":846,"column_start":2,"column_end":43}}]},{"kind":"Const","id":{"krate":0,"index":204},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":27974,"byte_end":27984,"line_start":850,"line_end":850,"column_start":8,"column_end":18},"name":"MIN_10_EXP","qualname":"::IsFloat::MIN_10_EXP","value":"i32","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" Minimum possible normal power of 10 exponent.\n","sig":null,"attributes":[{"value":"/ Minimum possible normal power of 10 exponent.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":27917,"byte_end":27966,"line_start":849,"line_end":849,"column_start":2,"column_end":51}}]},{"kind":"Const","id":{"krate":0,"index":205},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":28043,"byte_end":28053,"line_start":853,"line_end":853,"column_start":8,"column_end":18},"name":"MAX_10_EXP","qualname":"::IsFloat::MAX_10_EXP","value":"i32","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" Maximum possible power of 10 exponent.\n","sig":null,"attributes":[{"value":"/ Maximum possible power of 10 exponent.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":27993,"byte_end":28035,"line_start":852,"line_end":852,"column_start":2,"column_end":44}}]},{"kind":"Const","id":{"krate":0,"index":206},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":28093,"byte_end":28096,"line_start":856,"line_end":856,"column_start":8,"column_end":11},"name":"NAN","qualname":"::IsFloat::NAN","value":"Self","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" Not a Number (NaN).\n","sig":null,"attributes":[{"value":"/ Not a Number (NaN).","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":28062,"byte_end":28085,"line_start":855,"line_end":855,"column_start":2,"column_end":25}}]},{"kind":"Const","id":{"krate":0,"index":207},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":28133,"byte_end":28141,"line_start":859,"line_end":859,"column_start":8,"column_end":16},"name":"INFINITY","qualname":"::IsFloat::INFINITY","value":"Self","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" Infinity (∞).\n","sig":null,"attributes":[{"value":"/ Infinity (∞).","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":28106,"byte_end":28125,"line_start":858,"line_end":858,"column_start":2,"column_end":19}}]},{"kind":"Const","id":{"krate":0,"index":208},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":28190,"byte_end":28202,"line_start":862,"line_end":862,"column_start":8,"column_end":20},"name":"NEG_INFINITY","qualname":"::IsFloat::NEG_INFINITY","value":"Self","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" Negative infinity (−∞).\n","sig":null,"attributes":[{"value":"/ Negative infinity (−∞).","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":28151,"byte_end":28182,"line_start":861,"line_end":861,"column_start":2,"column_end":29}}]},{"kind":"Const","id":{"krate":0,"index":209},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":28249,"byte_end":28251,"line_start":865,"line_end":865,"column_start":8,"column_end":10},"name":"PI","qualname":"::IsFloat::PI","value":"Self","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" Archimedes' constant (π)\n","sig":null,"attributes":[{"value":"/ Archimedes' constant (π)","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":28212,"byte_end":28241,"line_start":864,"line_end":864,"column_start":2,"column_end":30}}]},{"kind":"Const","id":{"krate":0,"index":210},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":28277,"byte_end":28286,"line_start":868,"line_end":868,"column_start":8,"column_end":17},"name":"FRAC_PI_2","qualname":"::IsFloat::FRAC_PI_2","value":"Self","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" π/2\n","sig":null,"attributes":[{"value":"/ π/2","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":28261,"byte_end":28269,"line_start":867,"line_end":867,"column_start":2,"column_end":9}}]},{"kind":"Const","id":{"krate":0,"index":211},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":28312,"byte_end":28321,"line_start":871,"line_end":871,"column_start":8,"column_end":17},"name":"FRAC_PI_3","qualname":"::IsFloat::FRAC_PI_3","value":"Self","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" π/3\n","sig":null,"attributes":[{"value":"/ π/3","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":28296,"byte_end":28304,"line_start":870,"line_end":870,"column_start":2,"column_end":9}}]},{"kind":"Const","id":{"krate":0,"index":212},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":28347,"byte_end":28356,"line_start":874,"line_end":874,"column_start":8,"column_end":17},"name":"FRAC_PI_4","qualname":"::IsFloat::FRAC_PI_4","value":"Self","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" π/4\n","sig":null,"attributes":[{"value":"/ π/4","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":28331,"byte_end":28339,"line_start":873,"line_end":873,"column_start":2,"column_end":9}}]},{"kind":"Const","id":{"krate":0,"index":213},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":28382,"byte_end":28391,"line_start":877,"line_end":877,"column_start":8,"column_end":17},"name":"FRAC_PI_6","qualname":"::IsFloat::FRAC_PI_6","value":"Self","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" π/6\n","sig":null,"attributes":[{"value":"/ π/6","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":28366,"byte_end":28374,"line_start":876,"line_end":876,"column_start":2,"column_end":9}}]},{"kind":"Const","id":{"krate":0,"index":214},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":28417,"byte_end":28426,"line_start":880,"line_end":880,"column_start":8,"column_end":17},"name":"FRAC_PI_8","qualname":"::IsFloat::FRAC_PI_8","value":"Self","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" π/8\n","sig":null,"attributes":[{"value":"/ π/8","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":28401,"byte_end":28409,"line_start":879,"line_end":879,"column_start":2,"column_end":9}}]},{"kind":"Const","id":{"krate":0,"index":215},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":28452,"byte_end":28461,"line_start":883,"line_end":883,"column_start":8,"column_end":17},"name":"FRAC_1_PI","qualname":"::IsFloat::FRAC_1_PI","value":"Self","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" 1/π\n","sig":null,"attributes":[{"value":"/ 1/π","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":28436,"byte_end":28444,"line_start":882,"line_end":882,"column_start":2,"column_end":9}}]},{"kind":"Const","id":{"krate":0,"index":216},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":28487,"byte_end":28496,"line_start":886,"line_end":886,"column_start":8,"column_end":17},"name":"FRAC_2_PI","qualname":"::IsFloat::FRAC_2_PI","value":"Self","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" 2/π\n","sig":null,"attributes":[{"value":"/ 2/π","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":28471,"byte_end":28479,"line_start":885,"line_end":885,"column_start":2,"column_end":9}}]},{"kind":"Const","id":{"krate":0,"index":217},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":28528,"byte_end":28542,"line_start":889,"line_end":889,"column_start":8,"column_end":22},"name":"FRAC_2_SQRT_PI","qualname":"::IsFloat::FRAC_2_SQRT_PI","value":"Self","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" 2/sqrt(π)\n","sig":null,"attributes":[{"value":"/ 2/sqrt(π)","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":28506,"byte_end":28520,"line_start":888,"line_end":888,"column_start":2,"column_end":15}}]},{"kind":"Const","id":{"krate":0,"index":218},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":28571,"byte_end":28577,"line_start":892,"line_end":892,"column_start":8,"column_end":14},"name":"SQRT_2","qualname":"::IsFloat::SQRT_2","value":"Self","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" sqrt(2)\n","sig":null,"attributes":[{"value":"/ sqrt(2)","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":28552,"byte_end":28563,"line_start":891,"line_end":891,"column_start":2,"column_end":13}}]},{"kind":"Const","id":{"krate":0,"index":219},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":28608,"byte_end":28621,"line_start":895,"line_end":895,"column_start":8,"column_end":21},"name":"FRAC_1_SQRT_2","qualname":"::IsFloat::FRAC_1_SQRT_2","value":"Self","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" 1/sqrt(2)\n","sig":null,"attributes":[{"value":"/ 1/sqrt(2)","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":28587,"byte_end":28600,"line_start":894,"line_end":894,"column_start":2,"column_end":15}}]},{"kind":"Const","id":{"krate":0,"index":220},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":28663,"byte_end":28664,"line_start":898,"line_end":898,"column_start":8,"column_end":9},"name":"E","qualname":"::IsFloat::E","value":"Self","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" Euler’s number (e)\n","sig":null,"attributes":[{"value":"/ Euler’s number (e)","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":28631,"byte_end":28655,"line_start":897,"line_end":897,"column_start":2,"column_end":24}}]},{"kind":"Const","id":{"krate":0,"index":221},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":28704,"byte_end":28710,"line_start":901,"line_end":901,"column_start":8,"column_end":14},"name":"LOG2_E","qualname":"::IsFloat::LOG2_E","value":"Self","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" log<sub>2</sub>(e)\n","sig":null,"attributes":[{"value":"/ log<sub>2</sub>(e)","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":28674,"byte_end":28696,"line_start":900,"line_end":900,"column_start":2,"column_end":24}}]},{"kind":"Const","id":{"krate":0,"index":222},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":28751,"byte_end":28758,"line_start":904,"line_end":904,"column_start":8,"column_end":15},"name":"LOG10_E","qualname":"::IsFloat::LOG10_E","value":"Self","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" log<sub>10</sub>(e)\n","sig":null,"attributes":[{"value":"/ log<sub>10</sub>(e)","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":28720,"byte_end":28743,"line_start":903,"line_end":903,"column_start":2,"column_end":25}}]},{"kind":"Const","id":{"krate":0,"index":223},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":28785,"byte_end":28789,"line_start":907,"line_end":907,"column_start":8,"column_end":12},"name":"LN_2","qualname":"::IsFloat::LN_2","value":"Self","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" ln(2)\n","sig":null,"attributes":[{"value":"/ ln(2)","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":28768,"byte_end":28777,"line_start":906,"line_end":906,"column_start":2,"column_end":11}}]},{"kind":"Const","id":{"krate":0,"index":224},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":28817,"byte_end":28822,"line_start":910,"line_end":910,"column_start":8,"column_end":13},"name":"LN_10","qualname":"::IsFloat::LN_10","value":"Self","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" ln(10)\n","sig":null,"attributes":[{"value":"/ ln(10)","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":28799,"byte_end":28809,"line_start":909,"line_end":909,"column_start":2,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":35395,"byte_end":35401,"line_start":1117,"line_end":1117,"column_start":5,"column_end":11},"name":"is_nan","qualname":"::IsFloat::is_nan","value":"pub fn is_nan(Self) -> bool","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" Returns `true` if this value is `NaN`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this value is `NaN`.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":35348,"byte_end":35390,"line_start":1116,"line_end":1116,"column_start":2,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":35527,"byte_end":35538,"line_start":1121,"line_end":1121,"column_start":5,"column_end":16},"name":"is_infinite","qualname":"::IsFloat::is_infinite","value":"pub fn is_infinite(Self) -> bool","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" Returns `true` if this value is positive infinity or negative infinity,\n and `false` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this value is positive infinity or negative infinity,","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":35419,"byte_end":35494,"line_start":1119,"line_end":1119,"column_start":2,"column_end":77}},{"value":"/ and `false` otherwise.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":35496,"byte_end":35522,"line_start":1120,"line_end":1120,"column_start":2,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":35625,"byte_end":35634,"line_start":1124,"line_end":1124,"column_start":5,"column_end":14},"name":"is_finite","qualname":"::IsFloat::is_finite","value":"pub fn is_finite(Self) -> bool","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" Returns `true` if this number is neither infinite nor `NaN`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this number is neither infinite nor `NaN`.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":35556,"byte_end":35620,"line_start":1123,"line_end":1123,"column_start":2,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":35813,"byte_end":35822,"line_start":1130,"line_end":1130,"column_start":5,"column_end":14},"name":"is_normal","qualname":"::IsFloat::is_normal","value":"pub fn is_normal(Self) -> bool","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" Returns `true` if the number is neither zero, infinite, [subnormal], or\n `NaN`.","sig":null,"attributes":[{"value":"/ Returns `true` if the number is neither zero, infinite, [subnormal], or","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":35652,"byte_end":35727,"line_start":1126,"line_end":1126,"column_start":2,"column_end":77}},{"value":"/ `NaN`.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":35729,"byte_end":35739,"line_start":1127,"line_end":1127,"column_start":2,"column_end":12}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":35741,"byte_end":35744,"line_start":1128,"line_end":1128,"column_start":2,"column_end":5}},{"value":"/ [subnormal]: https://en.wixipedia.org/wiki/Denormal_number","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":35746,"byte_end":35808,"line_start":1129,"line_end":1129,"column_start":2,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":36015,"byte_end":36023,"line_start":1135,"line_end":1135,"column_start":5,"column_end":13},"name":"classify","qualname":"::IsFloat::classify","value":"pub fn classify(Self) -> FpCategory","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" Returns the floating point category of the number. If only one property\n is going to be tested, it is generally faster to use the specific\n predicate instead.\n","sig":null,"attributes":[{"value":"/ Returns the floating point category of the number. If only one property","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":35840,"byte_end":35915,"line_start":1132,"line_end":1132,"column_start":2,"column_end":77}},{"value":"/ is going to be tested, it is generally faster to use the specific","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":35917,"byte_end":35986,"line_start":1133,"line_end":1133,"column_start":2,"column_end":71}},{"value":"/ predicate instead.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":35988,"byte_end":36010,"line_start":1134,"line_end":1134,"column_start":2,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":36177,"byte_end":36193,"line_start":1139,"line_end":1139,"column_start":5,"column_end":21},"name":"is_sign_positive","qualname":"::IsFloat::is_sign_positive","value":"pub fn is_sign_positive(Self) -> bool","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" Returns `true` if `self` has a positive sign, including `+0.0`, `NaN`s\n with positive sign bit and positive infinity.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `self` has a positive sign, including `+0.0`, `NaN`s","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":36047,"byte_end":36121,"line_start":1137,"line_end":1137,"column_start":2,"column_end":76}},{"value":"/ with positive sign bit and positive infinity.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":36123,"byte_end":36172,"line_start":1138,"line_end":1138,"column_start":2,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":36341,"byte_end":36357,"line_start":1143,"line_end":1143,"column_start":5,"column_end":21},"name":"is_sign_negative","qualname":"::IsFloat::is_sign_negative","value":"pub fn is_sign_negative(Self) -> bool","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" Returns `true` if `self` has a negative sign, including `-0.0`, `NaN`s\n with negative sign bit and negative infinity.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `self` has a negative sign, including `-0.0`, `NaN`s","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":36211,"byte_end":36285,"line_start":1141,"line_end":1141,"column_start":2,"column_end":76}},{"value":"/ with negative sign bit and negative infinity.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":36287,"byte_end":36336,"line_start":1142,"line_end":1142,"column_start":2,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":36434,"byte_end":36439,"line_start":1146,"line_end":1146,"column_start":5,"column_end":10},"name":"recip","qualname":"::IsFloat::recip","value":"pub fn recip(Self) -> Self","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" Takes the reciprocal (inverse) of a number, `1/x`.\n","sig":null,"attributes":[{"value":"/ Takes the reciprocal (inverse) of a number, `1/x`.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":36375,"byte_end":36429,"line_start":1145,"line_end":1145,"column_start":2,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":36494,"byte_end":36504,"line_start":1149,"line_end":1149,"column_start":5,"column_end":15},"name":"to_degrees","qualname":"::IsFloat::to_degrees","value":"pub fn to_degrees(Self) -> Self","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" Converts radians to degrees.\n","sig":null,"attributes":[{"value":"/ Converts radians to degrees.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":36457,"byte_end":36489,"line_start":1148,"line_end":1148,"column_start":2,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":36559,"byte_end":36569,"line_start":1152,"line_end":1152,"column_start":5,"column_end":15},"name":"to_radians","qualname":"::IsFloat::to_radians","value":"pub fn to_radians(Self) -> Self","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" Converts degrees to radians.\n","sig":null,"attributes":[{"value":"/ Converts degrees to radians.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":36522,"byte_end":36554,"line_start":1151,"line_end":1151,"column_start":2,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":36635,"byte_end":36638,"line_start":1155,"line_end":1155,"column_start":5,"column_end":8},"name":"max","qualname":"::IsFloat::max","value":"pub fn max(Self, Self) -> Self","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" Returns the maximum of the two numbers.\n","sig":null,"attributes":[{"value":"/ Returns the maximum of the two numbers.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":36587,"byte_end":36630,"line_start":1154,"line_end":1154,"column_start":2,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":36717,"byte_end":36720,"line_start":1158,"line_end":1158,"column_start":5,"column_end":8},"name":"min","qualname":"::IsFloat::min","value":"pub fn min(Self, Self) -> Self","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" Returns the minimum of the two numbers.\n","sig":null,"attributes":[{"value":"/ Returns the minimum of the two numbers.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":36669,"byte_end":36712,"line_start":1157,"line_end":1157,"column_start":2,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":37144,"byte_end":37151,"line_start":1170,"line_end":1170,"column_start":5,"column_end":12},"name":"to_bits","qualname":"::IsFloat::to_bits","value":"pub fn to_bits(Self) -> Self::Raw","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" Raw transmutation to `u32`.","sig":null,"attributes":[{"value":"/ Raw transmutation to `u32`.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":36751,"byte_end":36782,"line_start":1160,"line_end":1160,"column_start":2,"column_end":33}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":36784,"byte_end":36787,"line_start":1161,"line_end":1161,"column_start":2,"column_end":5}},{"value":"/ This is currently identical to `transmute::<f32, u32>(self)` on all","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":36789,"byte_end":36860,"line_start":1162,"line_end":1162,"column_start":2,"column_end":73}},{"value":"/ platforms.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":36862,"byte_end":36876,"line_start":1163,"line_end":1163,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":36878,"byte_end":36881,"line_start":1164,"line_end":1164,"column_start":2,"column_end":5}},{"value":"/ See `from_bits` for some discussion of the portability of this operation","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":36883,"byte_end":36959,"line_start":1165,"line_end":1165,"column_start":2,"column_end":78}},{"value":"/ (there are almost no issues).","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":36961,"byte_end":36994,"line_start":1166,"line_end":1166,"column_start":2,"column_end":35}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":36996,"byte_end":36999,"line_start":1167,"line_end":1167,"column_start":2,"column_end":5}},{"value":"/ Note that this function is distinct from `as` casting, which attempts to","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":37001,"byte_end":37077,"line_start":1168,"line_end":1168,"column_start":2,"column_end":78}},{"value":"/ preserve the *numeric* value, and not the bitwise value.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":37079,"byte_end":37139,"line_start":1169,"line_end":1169,"column_start":2,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":38665,"byte_end":38674,"line_start":1202,"line_end":1202,"column_start":5,"column_end":14},"name":"from_bits","qualname":"::IsFloat::from_bits","value":"pub fn from_bits(Self::Raw) -> Self","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" Raw transmutation from `u32`.","sig":null,"attributes":[{"value":"/ Raw transmutation from `u32`.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":37174,"byte_end":37207,"line_start":1172,"line_end":1172,"column_start":2,"column_end":35}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":37209,"byte_end":37212,"line_start":1173,"line_end":1173,"column_start":2,"column_end":5}},{"value":"/ This is currently identical to `transmute::<u32, f32>(v)` on all","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":37214,"byte_end":37282,"line_start":1174,"line_end":1174,"column_start":2,"column_end":70}},{"value":"/ platforms. It turns out this is incredibly portable, for two reasons:","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":37284,"byte_end":37357,"line_start":1175,"line_end":1175,"column_start":2,"column_end":75}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":37359,"byte_end":37362,"line_start":1176,"line_end":1176,"column_start":2,"column_end":5}},{"value":"/ - Floats and Ints have the same endianness on all supported platforms.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":37364,"byte_end":37438,"line_start":1177,"line_end":1177,"column_start":2,"column_end":76}},{"value":"/ - IEEE-754 very precisely specifies the bit layout of floats.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":37440,"byte_end":37505,"line_start":1178,"line_end":1178,"column_start":2,"column_end":67}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":37507,"byte_end":37510,"line_start":1179,"line_end":1179,"column_start":2,"column_end":5}},{"value":"/ However there is one caveat: prior to the 2008 version of IEEE-754, how","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":37512,"byte_end":37587,"line_start":1180,"line_end":1180,"column_start":2,"column_end":77}},{"value":"/ to interpret the NaN signaling bit wasn't actually specified. Most","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":37589,"byte_end":37659,"line_start":1181,"line_end":1181,"column_start":2,"column_end":72}},{"value":"/ platforms (notably x86 and ARM) picked the interpretation that was","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":37661,"byte_end":37731,"line_start":1182,"line_end":1182,"column_start":2,"column_end":72}},{"value":"/ ultimately standardized in 2008, but some didn't (notably MIPS). As a","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":37733,"byte_end":37806,"line_start":1183,"line_end":1183,"column_start":2,"column_end":75}},{"value":"/ result, all signaling NaNs on MIPS are quiet NaNs on x86, and","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":37808,"byte_end":37873,"line_start":1184,"line_end":1184,"column_start":2,"column_end":67}},{"value":"/ vice-versa.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":37875,"byte_end":37890,"line_start":1185,"line_end":1185,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":37892,"byte_end":37895,"line_start":1186,"line_end":1186,"column_start":2,"column_end":5}},{"value":"/ Rather than trying to preserve signaling-ness cross-platform, this","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":37897,"byte_end":37967,"line_start":1187,"line_end":1187,"column_start":2,"column_end":72}},{"value":"/ implementation favors preserving the exact bits. This means that","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":37969,"byte_end":38037,"line_start":1188,"line_end":1188,"column_start":2,"column_end":70}},{"value":"/ any payloads encoded in NaNs will be preserved even if the result of","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":38039,"byte_end":38111,"line_start":1189,"line_end":1189,"column_start":2,"column_end":74}},{"value":"/ this method is sent over the network from an x86 machine to a MIPS one.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":38113,"byte_end":38188,"line_start":1190,"line_end":1190,"column_start":2,"column_end":77}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":38190,"byte_end":38193,"line_start":1191,"line_end":1191,"column_start":2,"column_end":5}},{"value":"/ If the results of this method are only manipulated by the same","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":38195,"byte_end":38261,"line_start":1192,"line_end":1192,"column_start":2,"column_end":68}},{"value":"/ architecture that produced them, then there is no portability concern.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":38263,"byte_end":38337,"line_start":1193,"line_end":1193,"column_start":2,"column_end":76}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":38339,"byte_end":38342,"line_start":1194,"line_end":1194,"column_start":2,"column_end":5}},{"value":"/ If the input isn't NaN, then there is no portability concern.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":38344,"byte_end":38409,"line_start":1195,"line_end":1195,"column_start":2,"column_end":67}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":38411,"byte_end":38414,"line_start":1196,"line_end":1196,"column_start":2,"column_end":5}},{"value":"/ If you don't care about signalingness (very likely), then there is no","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":38416,"byte_end":38489,"line_start":1197,"line_end":1197,"column_start":2,"column_end":75}},{"value":"/ portability concern.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":38491,"byte_end":38515,"line_start":1198,"line_end":1198,"column_start":2,"column_end":26}},{"value":"/","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":38517,"byte_end":38520,"line_start":1199,"line_end":1199,"column_start":2,"column_end":5}},{"value":"/ Note that this function is distinct from `as` casting, which attempts to","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":38522,"byte_end":38598,"line_start":1200,"line_end":1200,"column_start":2,"column_end":78}},{"value":"/ preserve the *numeric* value, and not the bitwise value.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":38600,"byte_end":38660,"line_start":1201,"line_end":1201,"column_start":2,"column_end":62}}]},{"kind":"Trait","id":{"krate":0,"index":239},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":38766,"byte_end":38769,"line_start":1206,"line_end":1206,"column_start":11,"column_end":14},"name":"Is8","qualname":"::Is8","value":"Is8: IsNumber","parent":null,"children":[],"decl_id":null,"docs":" Declare that a type is exactly eight bits wide.\n","sig":null,"attributes":[{"value":"/ Declare that a type is exactly eight bits wide.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":38704,"byte_end":38755,"line_start":1205,"line_end":1205,"column_start":1,"column_end":52}}]},{"kind":"Trait","id":{"krate":0,"index":240},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":38848,"byte_end":38852,"line_start":1209,"line_end":1209,"column_start":11,"column_end":15},"name":"Is16","qualname":"::Is16","value":"Is16: IsNumber","parent":null,"children":[],"decl_id":null,"docs":" Declare that a type is exactly sixteen bits wide.\n","sig":null,"attributes":[{"value":"/ Declare that a type is exactly sixteen bits wide.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":38784,"byte_end":38837,"line_start":1208,"line_end":1208,"column_start":1,"column_end":54}}]},{"kind":"Trait","id":{"krate":0,"index":241},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":38934,"byte_end":38938,"line_start":1212,"line_end":1212,"column_start":11,"column_end":15},"name":"Is32","qualname":"::Is32","value":"Is32: IsNumber","parent":null,"children":[],"decl_id":null,"docs":" Declare that a type is exactly thirty-two bits wide.\n","sig":null,"attributes":[{"value":"/ Declare that a type is exactly thirty-two bits wide.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":38867,"byte_end":38923,"line_start":1211,"line_end":1211,"column_start":1,"column_end":57}}]},{"kind":"Trait","id":{"krate":0,"index":242},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":39020,"byte_end":39024,"line_start":1215,"line_end":1215,"column_start":11,"column_end":15},"name":"Is64","qualname":"::Is64","value":"Is64: IsNumber","parent":null,"children":[],"decl_id":null,"docs":" Declare that a type is exactly sixty-four bits wide.\n","sig":null,"attributes":[{"value":"/ Declare that a type is exactly sixty-four bits wide.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":38953,"byte_end":39009,"line_start":1214,"line_end":1214,"column_start":1,"column_end":57}}]},{"kind":"Trait","id":{"krate":0,"index":243},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":39120,"byte_end":39125,"line_start":1218,"line_end":1218,"column_start":11,"column_end":16},"name":"Is128","qualname":"::Is128","value":"Is128: IsNumber","parent":null,"children":[],"decl_id":null,"docs":" Declare that a type is exactly one hundred twenty-eight bits wide.\n","sig":null,"attributes":[{"value":"/ Declare that a type is exactly one hundred twenty-eight bits wide.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":39039,"byte_end":39109,"line_start":1217,"line_end":1217,"column_start":1,"column_end":71}}]},{"kind":"Trait","id":{"krate":0,"index":244},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":39202,"byte_end":39210,"line_start":1221,"line_end":1221,"column_start":11,"column_end":19},"name":"AtLeast8","qualname":"::AtLeast8","value":"AtLeast8: IsNumber","parent":null,"children":[],"decl_id":null,"docs":" Declare that a type is eight or more bits wide.\n","sig":null,"attributes":[{"value":"/ Declare that a type is eight or more bits wide.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":39140,"byte_end":39191,"line_start":1220,"line_end":1220,"column_start":1,"column_end":52}}]},{"kind":"Trait","id":{"krate":0,"index":245},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":39289,"byte_end":39298,"line_start":1224,"line_end":1224,"column_start":11,"column_end":20},"name":"AtLeast16","qualname":"::AtLeast16","value":"AtLeast16: IsNumber","parent":null,"children":[],"decl_id":null,"docs":" Declare that a type is sixteen or more bits wide.\n","sig":null,"attributes":[{"value":"/ Declare that a type is sixteen or more bits wide.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":39225,"byte_end":39278,"line_start":1223,"line_end":1223,"column_start":1,"column_end":54}}]},{"kind":"Trait","id":{"krate":0,"index":246},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":39380,"byte_end":39389,"line_start":1227,"line_end":1227,"column_start":11,"column_end":20},"name":"AtLeast32","qualname":"::AtLeast32","value":"AtLeast32: IsNumber","parent":null,"children":[],"decl_id":null,"docs":" Declare that a type is thirty-two or more bits wide.\n","sig":null,"attributes":[{"value":"/ Declare that a type is thirty-two or more bits wide.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":39313,"byte_end":39369,"line_start":1226,"line_end":1226,"column_start":1,"column_end":57}}]},{"kind":"Trait","id":{"krate":0,"index":247},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":39471,"byte_end":39480,"line_start":1230,"line_end":1230,"column_start":11,"column_end":20},"name":"AtLeast64","qualname":"::AtLeast64","value":"AtLeast64: IsNumber","parent":null,"children":[],"decl_id":null,"docs":" Declare that a type is sixty-four or more bits wide.\n","sig":null,"attributes":[{"value":"/ Declare that a type is sixty-four or more bits wide.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":39404,"byte_end":39460,"line_start":1229,"line_end":1229,"column_start":1,"column_end":57}}]},{"kind":"Trait","id":{"krate":0,"index":248},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":39576,"byte_end":39586,"line_start":1233,"line_end":1233,"column_start":11,"column_end":21},"name":"AtLeast128","qualname":"::AtLeast128","value":"AtLeast128: IsNumber","parent":null,"children":[],"decl_id":null,"docs":" Declare that a type is one hundred twenty-eight or more bits wide.\n","sig":null,"attributes":[{"value":"/ Declare that a type is one hundred twenty-eight or more bits wide.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":39495,"byte_end":39565,"line_start":1232,"line_end":1232,"column_start":1,"column_end":71}}]},{"kind":"Trait","id":{"krate":0,"index":249},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":39664,"byte_end":39671,"line_start":1236,"line_end":1236,"column_start":11,"column_end":18},"name":"AtMost8","qualname":"::AtMost8","value":"AtMost8: IsNumber","parent":null,"children":[],"decl_id":null,"docs":" Declare that a type is eight or fewer bits wide.\n","sig":null,"attributes":[{"value":"/ Declare that a type is eight or fewer bits wide.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":39601,"byte_end":39653,"line_start":1235,"line_end":1235,"column_start":1,"column_end":53}}]},{"kind":"Trait","id":{"krate":0,"index":250},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":39751,"byte_end":39759,"line_start":1239,"line_end":1239,"column_start":11,"column_end":19},"name":"AtMost16","qualname":"::AtMost16","value":"AtMost16: IsNumber","parent":null,"children":[],"decl_id":null,"docs":" Declare that a type is sixteen or fewer bits wide.\n","sig":null,"attributes":[{"value":"/ Declare that a type is sixteen or fewer bits wide.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":39686,"byte_end":39740,"line_start":1238,"line_end":1238,"column_start":1,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":251},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":39842,"byte_end":39850,"line_start":1242,"line_end":1242,"column_start":11,"column_end":19},"name":"AtMost32","qualname":"::AtMost32","value":"AtMost32: IsNumber","parent":null,"children":[],"decl_id":null,"docs":" Declare that a type is thirty-two or fewer bits wide.\n","sig":null,"attributes":[{"value":"/ Declare that a type is thirty-two or fewer bits wide.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":39774,"byte_end":39831,"line_start":1241,"line_end":1241,"column_start":1,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":252},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":39933,"byte_end":39941,"line_start":1245,"line_end":1245,"column_start":11,"column_end":19},"name":"AtMost64","qualname":"::AtMost64","value":"AtMost64: IsNumber","parent":null,"children":[],"decl_id":null,"docs":" Declare that a type is sixty-four or fewer bits wide.\n","sig":null,"attributes":[{"value":"/ Declare that a type is sixty-four or fewer bits wide.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":39865,"byte_end":39922,"line_start":1244,"line_end":1244,"column_start":1,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":253},"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":40038,"byte_end":40047,"line_start":1248,"line_end":1248,"column_start":11,"column_end":20},"name":"AtMost128","qualname":"::AtMost128","value":"AtMost128: IsNumber","parent":null,"children":[],"decl_id":null,"docs":" Declare that a type is one hundred twenty-eight or fewer bits wide.\n","sig":null,"attributes":[{"value":"/ Declare that a type is one hundred twenty-eight or fewer bits wide.","span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":39956,"byte_end":40027,"line_start":1247,"line_end":1247,"column_start":1,"column_end":72}}]}],"impls":[],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":2318,"byte_end":2323,"line_start":99,"line_end":99,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":1,"index":2039},"to":{"krate":0,"index":48}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":2327,"byte_end":2331,"line_start":100,"line_end":100,"column_start":4,"column_end":8},"kind":"SuperTrait","from":{"krate":1,"index":2034},"to":{"krate":0,"index":48}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":2335,"byte_end":2339,"line_start":101,"line_end":101,"column_start":4,"column_end":8},"kind":"SuperTrait","from":{"krate":1,"index":2046},"to":{"krate":0,"index":48}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":2343,"byte_end":2348,"line_start":102,"line_end":102,"column_start":4,"column_end":9},"kind":"SuperTrait","from":{"krate":1,"index":2075},"to":{"krate":0,"index":48}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":2352,"byte_end":2357,"line_start":103,"line_end":103,"column_start":4,"column_end":9},"kind":"SuperTrait","from":{"krate":1,"index":1732},"to":{"krate":0,"index":48}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":2361,"byte_end":2365,"line_start":104,"line_end":104,"column_start":4,"column_end":8},"kind":"SuperTrait","from":{"krate":1,"index":2044},"to":{"krate":0,"index":48}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":2369,"byte_end":2376,"line_start":105,"line_end":105,"column_start":4,"column_end":11},"kind":"SuperTrait","from":{"krate":1,"index":2022},"to":{"krate":0,"index":48}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":2380,"byte_end":2387,"line_start":106,"line_end":106,"column_start":4,"column_end":11},"kind":"SuperTrait","from":{"krate":1,"index":8492},"to":{"krate":0,"index":48}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":2400,"byte_end":2409,"line_start":108,"line_end":108,"column_start":4,"column_end":13},"kind":"SuperTrait","from":{"krate":1,"index":1760},"to":{"krate":0,"index":48}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":2419,"byte_end":2429,"line_start":109,"line_end":109,"column_start":4,"column_end":14},"kind":"SuperTrait","from":{"krate":1,"index":1797},"to":{"krate":0,"index":48}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":2448,"byte_end":2453,"line_start":111,"line_end":111,"column_start":4,"column_end":9},"kind":"SuperTrait","from":{"krate":1,"index":6555},"to":{"krate":0,"index":48}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":2457,"byte_end":2464,"line_start":112,"line_end":112,"column_start":4,"column_end":11},"kind":"SuperTrait","from":{"krate":1,"index":6560},"to":{"krate":0,"index":48}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":2478,"byte_end":2485,"line_start":114,"line_end":114,"column_start":4,"column_end":11},"kind":"SuperTrait","from":{"krate":1,"index":5150},"to":{"krate":0,"index":48}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":2503,"byte_end":2510,"line_start":115,"line_end":115,"column_start":12,"column_end":19},"kind":"SuperTrait","from":{"krate":1,"index":5150},"to":{"krate":0,"index":48}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":2524,"byte_end":2527,"line_start":116,"line_end":116,"column_start":4,"column_end":7},"kind":"SuperTrait","from":{"krate":1,"index":5146},"to":{"krate":0,"index":48}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":2545,"byte_end":2548,"line_start":117,"line_end":117,"column_start":12,"column_end":15},"kind":"SuperTrait","from":{"krate":1,"index":5146},"to":{"krate":0,"index":48}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":2579,"byte_end":2582,"line_start":119,"line_end":119,"column_start":4,"column_end":7},"kind":"SuperTrait","from":{"krate":1,"index":2099},"to":{"krate":0,"index":48}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":2615,"byte_end":2618,"line_start":120,"line_end":120,"column_start":12,"column_end":15},"kind":"SuperTrait","from":{"krate":1,"index":2099},"to":{"krate":0,"index":48}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":2647,"byte_end":2656,"line_start":121,"line_end":121,"column_start":4,"column_end":13},"kind":"SuperTrait","from":{"krate":1,"index":2130},"to":{"krate":0,"index":48}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":2674,"byte_end":2683,"line_start":122,"line_end":122,"column_start":12,"column_end":21},"kind":"SuperTrait","from":{"krate":1,"index":2130},"to":{"krate":0,"index":48}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":2697,"byte_end":2700,"line_start":123,"line_end":123,"column_start":4,"column_end":7},"kind":"SuperTrait","from":{"krate":1,"index":2104},"to":{"krate":0,"index":48}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":2733,"byte_end":2736,"line_start":124,"line_end":124,"column_start":12,"column_end":15},"kind":"SuperTrait","from":{"krate":1,"index":2104},"to":{"krate":0,"index":48}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":2765,"byte_end":2774,"line_start":125,"line_end":125,"column_start":4,"column_end":13},"kind":"SuperTrait","from":{"krate":1,"index":2134},"to":{"krate":0,"index":48}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":2792,"byte_end":2801,"line_start":126,"line_end":126,"column_start":12,"column_end":21},"kind":"SuperTrait","from":{"krate":1,"index":2134},"to":{"krate":0,"index":48}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":2815,"byte_end":2818,"line_start":127,"line_end":127,"column_start":4,"column_end":7},"kind":"SuperTrait","from":{"krate":1,"index":2109},"to":{"krate":0,"index":48}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":2851,"byte_end":2854,"line_start":128,"line_end":128,"column_start":12,"column_end":15},"kind":"SuperTrait","from":{"krate":1,"index":2109},"to":{"krate":0,"index":48}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":2883,"byte_end":2892,"line_start":129,"line_end":129,"column_start":4,"column_end":13},"kind":"SuperTrait","from":{"krate":1,"index":2138},"to":{"krate":0,"index":48}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":2910,"byte_end":2919,"line_start":130,"line_end":130,"column_start":12,"column_end":21},"kind":"SuperTrait","from":{"krate":1,"index":2138},"to":{"krate":0,"index":48}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":2933,"byte_end":2936,"line_start":131,"line_end":131,"column_start":4,"column_end":7},"kind":"SuperTrait","from":{"krate":1,"index":2114},"to":{"krate":0,"index":48}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":2969,"byte_end":2972,"line_start":132,"line_end":132,"column_start":12,"column_end":15},"kind":"SuperTrait","from":{"krate":1,"index":2114},"to":{"krate":0,"index":48}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":3001,"byte_end":3010,"line_start":133,"line_end":133,"column_start":4,"column_end":13},"kind":"SuperTrait","from":{"krate":1,"index":2142},"to":{"krate":0,"index":48}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":3028,"byte_end":3037,"line_start":134,"line_end":134,"column_start":12,"column_end":21},"kind":"SuperTrait","from":{"krate":1,"index":2142},"to":{"krate":0,"index":48}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":3051,"byte_end":3054,"line_start":135,"line_end":135,"column_start":4,"column_end":7},"kind":"SuperTrait","from":{"krate":1,"index":2120},"to":{"krate":0,"index":48}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":3087,"byte_end":3090,"line_start":136,"line_end":136,"column_start":12,"column_end":15},"kind":"SuperTrait","from":{"krate":1,"index":2120},"to":{"krate":0,"index":48}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":3119,"byte_end":3128,"line_start":137,"line_end":137,"column_start":4,"column_end":13},"kind":"SuperTrait","from":{"krate":1,"index":2146},"to":{"krate":0,"index":48}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":3146,"byte_end":3155,"line_start":138,"line_end":138,"column_start":12,"column_end":21},"kind":"SuperTrait","from":{"krate":1,"index":2146},"to":{"krate":0,"index":48}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":4175,"byte_end":4183,"line_start":171,"line_end":171,"column_start":2,"column_end":10},"kind":"SuperTrait","from":{"krate":0,"index":48},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":4187,"byte_end":4191,"line_start":172,"line_end":172,"column_start":4,"column_end":8},"kind":"SuperTrait","from":{"krate":1,"index":6743},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":4195,"byte_end":4197,"line_start":173,"line_end":173,"column_start":4,"column_end":6},"kind":"SuperTrait","from":{"krate":1,"index":1765},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":4201,"byte_end":4204,"line_start":174,"line_end":174,"column_start":4,"column_end":7},"kind":"SuperTrait","from":{"krate":1,"index":1786},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":4208,"byte_end":4214,"line_start":175,"line_end":175,"column_start":4,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":6564},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":4218,"byte_end":4226,"line_start":176,"line_end":176,"column_start":4,"column_end":12},"kind":"SuperTrait","from":{"krate":1,"index":6566},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":4230,"byte_end":4238,"line_start":177,"line_end":177,"column_start":4,"column_end":12},"kind":"SuperTrait","from":{"krate":1,"index":6568},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":4242,"byte_end":4247,"line_start":178,"line_end":178,"column_start":4,"column_end":9},"kind":"SuperTrait","from":{"krate":1,"index":6562},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":4251,"byte_end":4257,"line_start":179,"line_end":179,"column_start":4,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":2155},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":4290,"byte_end":4296,"line_start":180,"line_end":180,"column_start":12,"column_end":18},"kind":"SuperTrait","from":{"krate":1,"index":2155},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":4325,"byte_end":4337,"line_start":181,"line_end":181,"column_start":4,"column_end":16},"kind":"SuperTrait","from":{"krate":1,"index":2182},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":4355,"byte_end":4367,"line_start":182,"line_end":182,"column_start":12,"column_end":24},"kind":"SuperTrait","from":{"krate":1,"index":2182},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":4381,"byte_end":4386,"line_start":183,"line_end":183,"column_start":4,"column_end":9},"kind":"SuperTrait","from":{"krate":1,"index":2160},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":4419,"byte_end":4424,"line_start":184,"line_end":184,"column_start":12,"column_end":17},"kind":"SuperTrait","from":{"krate":1,"index":2160},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":4453,"byte_end":4464,"line_start":185,"line_end":185,"column_start":4,"column_end":15},"kind":"SuperTrait","from":{"krate":1,"index":2186},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":4482,"byte_end":4493,"line_start":186,"line_end":186,"column_start":12,"column_end":23},"kind":"SuperTrait","from":{"krate":1,"index":2186},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":4507,"byte_end":4513,"line_start":187,"line_end":187,"column_start":4,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":2165},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":4546,"byte_end":4552,"line_start":188,"line_end":188,"column_start":12,"column_end":18},"kind":"SuperTrait","from":{"krate":1,"index":2165},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":4581,"byte_end":4593,"line_start":189,"line_end":189,"column_start":4,"column_end":16},"kind":"SuperTrait","from":{"krate":1,"index":2190},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":4611,"byte_end":4623,"line_start":190,"line_end":190,"column_start":12,"column_end":24},"kind":"SuperTrait","from":{"krate":1,"index":2190},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":4637,"byte_end":4640,"line_start":191,"line_end":191,"column_start":4,"column_end":7},"kind":"SuperTrait","from":{"krate":1,"index":2151},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":4659,"byte_end":4666,"line_start":192,"line_end":192,"column_start":4,"column_end":11},"kind":"SuperTrait","from":{"krate":1,"index":1959},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":4674,"byte_end":4681,"line_start":193,"line_end":193,"column_start":4,"column_end":11},"kind":"SuperTrait","from":{"krate":1,"index":1959},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":4689,"byte_end":4696,"line_start":194,"line_end":194,"column_start":4,"column_end":11},"kind":"SuperTrait","from":{"krate":1,"index":1959},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":4705,"byte_end":4712,"line_start":195,"line_end":195,"column_start":4,"column_end":11},"kind":"SuperTrait","from":{"krate":1,"index":1959},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":4721,"byte_end":4728,"line_start":196,"line_end":196,"column_start":4,"column_end":11},"kind":"SuperTrait","from":{"krate":1,"index":1959},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":4737,"byte_end":4744,"line_start":197,"line_end":197,"column_start":4,"column_end":11},"kind":"SuperTrait","from":{"krate":1,"index":1959},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":4753,"byte_end":4760,"line_start":198,"line_end":198,"column_start":4,"column_end":11},"kind":"SuperTrait","from":{"krate":1,"index":1959},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":4769,"byte_end":4776,"line_start":199,"line_end":199,"column_start":4,"column_end":11},"kind":"SuperTrait","from":{"krate":1,"index":1959},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":4785,"byte_end":4792,"line_start":200,"line_end":200,"column_start":4,"column_end":11},"kind":"SuperTrait","from":{"krate":1,"index":1959},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":4802,"byte_end":4809,"line_start":201,"line_end":201,"column_start":4,"column_end":11},"kind":"SuperTrait","from":{"krate":1,"index":1959},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":4819,"byte_end":4826,"line_start":202,"line_end":202,"column_start":4,"column_end":11},"kind":"SuperTrait","from":{"krate":1,"index":1959},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":4837,"byte_end":4844,"line_start":203,"line_end":203,"column_start":4,"column_end":11},"kind":"SuperTrait","from":{"krate":1,"index":1959},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":4855,"byte_end":4862,"line_start":204,"line_end":204,"column_start":4,"column_end":11},"kind":"SuperTrait","from":{"krate":1,"index":1955},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":4870,"byte_end":4877,"line_start":205,"line_end":205,"column_start":4,"column_end":11},"kind":"SuperTrait","from":{"krate":1,"index":1955},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":4885,"byte_end":4892,"line_start":206,"line_end":206,"column_start":4,"column_end":11},"kind":"SuperTrait","from":{"krate":1,"index":1955},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":4901,"byte_end":4908,"line_start":207,"line_end":207,"column_start":4,"column_end":11},"kind":"SuperTrait","from":{"krate":1,"index":1955},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":4917,"byte_end":4924,"line_start":208,"line_end":208,"column_start":4,"column_end":11},"kind":"SuperTrait","from":{"krate":1,"index":1955},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":4933,"byte_end":4940,"line_start":209,"line_end":209,"column_start":4,"column_end":11},"kind":"SuperTrait","from":{"krate":1,"index":1955},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":4949,"byte_end":4956,"line_start":210,"line_end":210,"column_start":4,"column_end":11},"kind":"SuperTrait","from":{"krate":1,"index":1955},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":4965,"byte_end":4972,"line_start":211,"line_end":211,"column_start":4,"column_end":11},"kind":"SuperTrait","from":{"krate":1,"index":1955},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":4981,"byte_end":4988,"line_start":212,"line_end":212,"column_start":4,"column_end":11},"kind":"SuperTrait","from":{"krate":1,"index":1955},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":4998,"byte_end":5005,"line_start":213,"line_end":213,"column_start":4,"column_end":11},"kind":"SuperTrait","from":{"krate":1,"index":1955},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":5015,"byte_end":5022,"line_start":214,"line_end":214,"column_start":4,"column_end":11},"kind":"SuperTrait","from":{"krate":1,"index":1955},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":5033,"byte_end":5040,"line_start":215,"line_end":215,"column_start":4,"column_end":11},"kind":"SuperTrait","from":{"krate":1,"index":1955},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":5051,"byte_end":5054,"line_start":216,"line_end":216,"column_start":4,"column_end":7},"kind":"SuperTrait","from":{"krate":1,"index":2170},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":5085,"byte_end":5088,"line_start":217,"line_end":217,"column_start":12,"column_end":15},"kind":"SuperTrait","from":{"krate":1,"index":2170},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":5115,"byte_end":5124,"line_start":218,"line_end":218,"column_start":4,"column_end":13},"kind":"SuperTrait","from":{"krate":1,"index":2194},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":5140,"byte_end":5149,"line_start":219,"line_end":219,"column_start":12,"column_end":21},"kind":"SuperTrait","from":{"krate":1,"index":2194},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":5161,"byte_end":5164,"line_start":220,"line_end":220,"column_start":4,"column_end":7},"kind":"SuperTrait","from":{"krate":1,"index":2176},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":5195,"byte_end":5198,"line_start":221,"line_end":221,"column_start":12,"column_end":15},"kind":"SuperTrait","from":{"krate":1,"index":2176},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":5225,"byte_end":5234,"line_start":222,"line_end":222,"column_start":4,"column_end":13},"kind":"SuperTrait","from":{"krate":1,"index":2199},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":5250,"byte_end":5259,"line_start":223,"line_end":223,"column_start":12,"column_end":21},"kind":"SuperTrait","from":{"krate":1,"index":2199},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":5271,"byte_end":5274,"line_start":224,"line_end":224,"column_start":4,"column_end":7},"kind":"SuperTrait","from":{"krate":1,"index":2170},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":5305,"byte_end":5308,"line_start":225,"line_end":225,"column_start":12,"column_end":15},"kind":"SuperTrait","from":{"krate":1,"index":2170},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":5335,"byte_end":5344,"line_start":226,"line_end":226,"column_start":4,"column_end":13},"kind":"SuperTrait","from":{"krate":1,"index":2194},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":5360,"byte_end":5369,"line_start":227,"line_end":227,"column_start":12,"column_end":21},"kind":"SuperTrait","from":{"krate":1,"index":2194},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":5381,"byte_end":5384,"line_start":228,"line_end":228,"column_start":4,"column_end":7},"kind":"SuperTrait","from":{"krate":1,"index":2176},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":5415,"byte_end":5418,"line_start":229,"line_end":229,"column_start":12,"column_end":15},"kind":"SuperTrait","from":{"krate":1,"index":2176},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":5445,"byte_end":5454,"line_start":230,"line_end":230,"column_start":4,"column_end":13},"kind":"SuperTrait","from":{"krate":1,"index":2199},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":5470,"byte_end":5479,"line_start":231,"line_end":231,"column_start":12,"column_end":21},"kind":"SuperTrait","from":{"krate":1,"index":2199},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":5491,"byte_end":5494,"line_start":232,"line_end":232,"column_start":4,"column_end":7},"kind":"SuperTrait","from":{"krate":1,"index":2170},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":5526,"byte_end":5529,"line_start":233,"line_end":233,"column_start":12,"column_end":15},"kind":"SuperTrait","from":{"krate":1,"index":2170},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":5557,"byte_end":5566,"line_start":234,"line_end":234,"column_start":4,"column_end":13},"kind":"SuperTrait","from":{"krate":1,"index":2194},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":5583,"byte_end":5592,"line_start":235,"line_end":235,"column_start":12,"column_end":21},"kind":"SuperTrait","from":{"krate":1,"index":2194},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":5605,"byte_end":5608,"line_start":236,"line_end":236,"column_start":4,"column_end":7},"kind":"SuperTrait","from":{"krate":1,"index":2176},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":5640,"byte_end":5643,"line_start":237,"line_end":237,"column_start":12,"column_end":15},"kind":"SuperTrait","from":{"krate":1,"index":2176},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":5671,"byte_end":5680,"line_start":238,"line_end":238,"column_start":4,"column_end":13},"kind":"SuperTrait","from":{"krate":1,"index":2199},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":5697,"byte_end":5706,"line_start":239,"line_end":239,"column_start":12,"column_end":21},"kind":"SuperTrait","from":{"krate":1,"index":2199},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":5719,"byte_end":5722,"line_start":240,"line_end":240,"column_start":4,"column_end":7},"kind":"SuperTrait","from":{"krate":1,"index":2170},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":5754,"byte_end":5757,"line_start":241,"line_end":241,"column_start":12,"column_end":15},"kind":"SuperTrait","from":{"krate":1,"index":2170},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":5785,"byte_end":5794,"line_start":242,"line_end":242,"column_start":4,"column_end":13},"kind":"SuperTrait","from":{"krate":1,"index":2194},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":5811,"byte_end":5820,"line_start":243,"line_end":243,"column_start":12,"column_end":21},"kind":"SuperTrait","from":{"krate":1,"index":2194},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":5833,"byte_end":5836,"line_start":244,"line_end":244,"column_start":4,"column_end":7},"kind":"SuperTrait","from":{"krate":1,"index":2176},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":5868,"byte_end":5871,"line_start":245,"line_end":245,"column_start":12,"column_end":15},"kind":"SuperTrait","from":{"krate":1,"index":2176},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":5899,"byte_end":5908,"line_start":246,"line_end":246,"column_start":4,"column_end":13},"kind":"SuperTrait","from":{"krate":1,"index":2199},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":5925,"byte_end":5934,"line_start":247,"line_end":247,"column_start":12,"column_end":21},"kind":"SuperTrait","from":{"krate":1,"index":2199},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":5947,"byte_end":5950,"line_start":248,"line_end":248,"column_start":4,"column_end":7},"kind":"SuperTrait","from":{"krate":1,"index":2170},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":5982,"byte_end":5985,"line_start":249,"line_end":249,"column_start":12,"column_end":15},"kind":"SuperTrait","from":{"krate":1,"index":2170},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":6013,"byte_end":6022,"line_start":250,"line_end":250,"column_start":4,"column_end":13},"kind":"SuperTrait","from":{"krate":1,"index":2194},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":6039,"byte_end":6048,"line_start":251,"line_end":251,"column_start":12,"column_end":21},"kind":"SuperTrait","from":{"krate":1,"index":2194},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":6061,"byte_end":6064,"line_start":252,"line_end":252,"column_start":4,"column_end":7},"kind":"SuperTrait","from":{"krate":1,"index":2176},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":6096,"byte_end":6099,"line_start":253,"line_end":253,"column_start":12,"column_end":15},"kind":"SuperTrait","from":{"krate":1,"index":2176},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":6127,"byte_end":6136,"line_start":254,"line_end":254,"column_start":4,"column_end":13},"kind":"SuperTrait","from":{"krate":1,"index":2199},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":6153,"byte_end":6162,"line_start":255,"line_end":255,"column_start":12,"column_end":21},"kind":"SuperTrait","from":{"krate":1,"index":2199},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":6175,"byte_end":6178,"line_start":256,"line_end":256,"column_start":4,"column_end":7},"kind":"SuperTrait","from":{"krate":1,"index":2170},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":6210,"byte_end":6213,"line_start":257,"line_end":257,"column_start":12,"column_end":15},"kind":"SuperTrait","from":{"krate":1,"index":2170},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":6241,"byte_end":6250,"line_start":258,"line_end":258,"column_start":4,"column_end":13},"kind":"SuperTrait","from":{"krate":1,"index":2194},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":6267,"byte_end":6276,"line_start":259,"line_end":259,"column_start":12,"column_end":21},"kind":"SuperTrait","from":{"krate":1,"index":2194},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":6289,"byte_end":6292,"line_start":260,"line_end":260,"column_start":4,"column_end":7},"kind":"SuperTrait","from":{"krate":1,"index":2176},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":6324,"byte_end":6327,"line_start":261,"line_end":261,"column_start":12,"column_end":15},"kind":"SuperTrait","from":{"krate":1,"index":2176},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":6355,"byte_end":6364,"line_start":262,"line_end":262,"column_start":4,"column_end":13},"kind":"SuperTrait","from":{"krate":1,"index":2199},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":6381,"byte_end":6390,"line_start":263,"line_end":263,"column_start":12,"column_end":21},"kind":"SuperTrait","from":{"krate":1,"index":2199},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":6403,"byte_end":6406,"line_start":264,"line_end":264,"column_start":4,"column_end":7},"kind":"SuperTrait","from":{"krate":1,"index":2170},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":6438,"byte_end":6441,"line_start":265,"line_end":265,"column_start":12,"column_end":15},"kind":"SuperTrait","from":{"krate":1,"index":2170},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":6469,"byte_end":6478,"line_start":266,"line_end":266,"column_start":4,"column_end":13},"kind":"SuperTrait","from":{"krate":1,"index":2194},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":6495,"byte_end":6504,"line_start":267,"line_end":267,"column_start":12,"column_end":21},"kind":"SuperTrait","from":{"krate":1,"index":2194},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":6517,"byte_end":6520,"line_start":268,"line_end":268,"column_start":4,"column_end":7},"kind":"SuperTrait","from":{"krate":1,"index":2176},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":6552,"byte_end":6555,"line_start":269,"line_end":269,"column_start":12,"column_end":15},"kind":"SuperTrait","from":{"krate":1,"index":2176},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":6583,"byte_end":6592,"line_start":270,"line_end":270,"column_start":4,"column_end":13},"kind":"SuperTrait","from":{"krate":1,"index":2199},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":6609,"byte_end":6618,"line_start":271,"line_end":271,"column_start":12,"column_end":21},"kind":"SuperTrait","from":{"krate":1,"index":2199},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":6631,"byte_end":6634,"line_start":272,"line_end":272,"column_start":4,"column_end":7},"kind":"SuperTrait","from":{"krate":1,"index":2170},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":6666,"byte_end":6669,"line_start":273,"line_end":273,"column_start":12,"column_end":15},"kind":"SuperTrait","from":{"krate":1,"index":2170},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":6697,"byte_end":6706,"line_start":274,"line_end":274,"column_start":4,"column_end":13},"kind":"SuperTrait","from":{"krate":1,"index":2194},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":6723,"byte_end":6732,"line_start":275,"line_end":275,"column_start":12,"column_end":21},"kind":"SuperTrait","from":{"krate":1,"index":2194},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":6745,"byte_end":6748,"line_start":276,"line_end":276,"column_start":4,"column_end":7},"kind":"SuperTrait","from":{"krate":1,"index":2176},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":6780,"byte_end":6783,"line_start":277,"line_end":277,"column_start":12,"column_end":15},"kind":"SuperTrait","from":{"krate":1,"index":2176},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":6811,"byte_end":6820,"line_start":278,"line_end":278,"column_start":4,"column_end":13},"kind":"SuperTrait","from":{"krate":1,"index":2199},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":6837,"byte_end":6846,"line_start":279,"line_end":279,"column_start":12,"column_end":21},"kind":"SuperTrait","from":{"krate":1,"index":2199},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":6859,"byte_end":6862,"line_start":280,"line_end":280,"column_start":4,"column_end":7},"kind":"SuperTrait","from":{"krate":1,"index":2170},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":6895,"byte_end":6898,"line_start":281,"line_end":281,"column_start":12,"column_end":15},"kind":"SuperTrait","from":{"krate":1,"index":2170},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":6927,"byte_end":6936,"line_start":282,"line_end":282,"column_start":4,"column_end":13},"kind":"SuperTrait","from":{"krate":1,"index":2194},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":6954,"byte_end":6963,"line_start":283,"line_end":283,"column_start":12,"column_end":21},"kind":"SuperTrait","from":{"krate":1,"index":2194},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":6977,"byte_end":6980,"line_start":284,"line_end":284,"column_start":4,"column_end":7},"kind":"SuperTrait","from":{"krate":1,"index":2176},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":7013,"byte_end":7016,"line_start":285,"line_end":285,"column_start":12,"column_end":15},"kind":"SuperTrait","from":{"krate":1,"index":2176},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":7045,"byte_end":7054,"line_start":286,"line_end":286,"column_start":4,"column_end":13},"kind":"SuperTrait","from":{"krate":1,"index":2199},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":7072,"byte_end":7081,"line_start":287,"line_end":287,"column_start":12,"column_end":21},"kind":"SuperTrait","from":{"krate":1,"index":2199},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":7095,"byte_end":7098,"line_start":288,"line_end":288,"column_start":4,"column_end":7},"kind":"SuperTrait","from":{"krate":1,"index":2170},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":7131,"byte_end":7134,"line_start":289,"line_end":289,"column_start":12,"column_end":15},"kind":"SuperTrait","from":{"krate":1,"index":2170},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":7163,"byte_end":7172,"line_start":290,"line_end":290,"column_start":4,"column_end":13},"kind":"SuperTrait","from":{"krate":1,"index":2194},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":7190,"byte_end":7199,"line_start":291,"line_end":291,"column_start":12,"column_end":21},"kind":"SuperTrait","from":{"krate":1,"index":2194},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":7213,"byte_end":7216,"line_start":292,"line_end":292,"column_start":4,"column_end":7},"kind":"SuperTrait","from":{"krate":1,"index":2176},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":7249,"byte_end":7252,"line_start":293,"line_end":293,"column_start":12,"column_end":15},"kind":"SuperTrait","from":{"krate":1,"index":2176},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":7281,"byte_end":7290,"line_start":294,"line_end":294,"column_start":4,"column_end":13},"kind":"SuperTrait","from":{"krate":1,"index":2199},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":7308,"byte_end":7317,"line_start":295,"line_end":295,"column_start":12,"column_end":21},"kind":"SuperTrait","from":{"krate":1,"index":2199},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":7331,"byte_end":7334,"line_start":296,"line_end":296,"column_start":4,"column_end":7},"kind":"SuperTrait","from":{"krate":1,"index":2170},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":7368,"byte_end":7371,"line_start":297,"line_end":297,"column_start":12,"column_end":15},"kind":"SuperTrait","from":{"krate":1,"index":2170},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":7401,"byte_end":7410,"line_start":298,"line_end":298,"column_start":4,"column_end":13},"kind":"SuperTrait","from":{"krate":1,"index":2194},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":7429,"byte_end":7438,"line_start":299,"line_end":299,"column_start":12,"column_end":21},"kind":"SuperTrait","from":{"krate":1,"index":2194},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":7453,"byte_end":7456,"line_start":300,"line_end":300,"column_start":4,"column_end":7},"kind":"SuperTrait","from":{"krate":1,"index":2176},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":7490,"byte_end":7493,"line_start":301,"line_end":301,"column_start":12,"column_end":15},"kind":"SuperTrait","from":{"krate":1,"index":2176},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":7523,"byte_end":7532,"line_start":302,"line_end":302,"column_start":4,"column_end":13},"kind":"SuperTrait","from":{"krate":1,"index":2199},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":7551,"byte_end":7560,"line_start":303,"line_end":303,"column_start":12,"column_end":21},"kind":"SuperTrait","from":{"krate":1,"index":2199},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":7575,"byte_end":7578,"line_start":304,"line_end":304,"column_start":4,"column_end":7},"kind":"SuperTrait","from":{"krate":1,"index":2170},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":7612,"byte_end":7615,"line_start":305,"line_end":305,"column_start":12,"column_end":15},"kind":"SuperTrait","from":{"krate":1,"index":2170},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":7645,"byte_end":7654,"line_start":306,"line_end":306,"column_start":4,"column_end":13},"kind":"SuperTrait","from":{"krate":1,"index":2194},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":7673,"byte_end":7682,"line_start":307,"line_end":307,"column_start":12,"column_end":21},"kind":"SuperTrait","from":{"krate":1,"index":2194},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":7697,"byte_end":7700,"line_start":308,"line_end":308,"column_start":4,"column_end":7},"kind":"SuperTrait","from":{"krate":1,"index":2176},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":7734,"byte_end":7737,"line_start":309,"line_end":309,"column_start":12,"column_end":15},"kind":"SuperTrait","from":{"krate":1,"index":2176},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":7767,"byte_end":7776,"line_start":310,"line_end":310,"column_start":4,"column_end":13},"kind":"SuperTrait","from":{"krate":1,"index":2199},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":7795,"byte_end":7804,"line_start":311,"line_end":311,"column_start":12,"column_end":21},"kind":"SuperTrait","from":{"krate":1,"index":2199},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":24283,"byte_end":24292,"line_start":736,"line_end":736,"column_start":21,"column_end":30},"kind":"SuperTrait","from":{"krate":0,"index":68},"to":{"krate":0,"index":181}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":24295,"byte_end":24298,"line_start":736,"line_end":736,"column_start":33,"column_end":36},"kind":"SuperTrait","from":{"krate":1,"index":2126},"to":{"krate":0,"index":181}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":26140,"byte_end":26149,"line_start":785,"line_end":785,"column_start":23,"column_end":32},"kind":"SuperTrait","from":{"krate":0,"index":68},"to":{"krate":0,"index":189}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":26923,"byte_end":26931,"line_start":804,"line_end":804,"column_start":2,"column_end":10},"kind":"SuperTrait","from":{"krate":0,"index":48},"to":{"krate":0,"index":193}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":26935,"byte_end":26943,"line_start":805,"line_end":805,"column_start":4,"column_end":12},"kind":"SuperTrait","from":{"krate":1,"index":6572},"to":{"krate":0,"index":193}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":26947,"byte_end":26955,"line_start":806,"line_end":806,"column_start":4,"column_end":12},"kind":"SuperTrait","from":{"krate":1,"index":6574},"to":{"krate":0,"index":193}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":26959,"byte_end":26962,"line_start":807,"line_end":807,"column_start":4,"column_end":7},"kind":"SuperTrait","from":{"krate":1,"index":2126},"to":{"krate":0,"index":193}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":26966,"byte_end":26970,"line_start":808,"line_end":808,"column_start":4,"column_end":8},"kind":"SuperTrait","from":{"krate":1,"index":1952},"to":{"krate":0,"index":193}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":26979,"byte_end":26983,"line_start":809,"line_end":809,"column_start":4,"column_end":8},"kind":"SuperTrait","from":{"krate":1,"index":1952},"to":{"krate":0,"index":193}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":26991,"byte_end":26995,"line_start":810,"line_end":810,"column_start":4,"column_end":8},"kind":"SuperTrait","from":{"krate":1,"index":1952},"to":{"krate":0,"index":193}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":27004,"byte_end":27008,"line_start":811,"line_end":811,"column_start":4,"column_end":8},"kind":"SuperTrait","from":{"krate":1,"index":1952},"to":{"krate":0,"index":193}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":27016,"byte_end":27020,"line_start":812,"line_end":812,"column_start":4,"column_end":8},"kind":"SuperTrait","from":{"krate":1,"index":1952},"to":{"krate":0,"index":193}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":38771,"byte_end":38779,"line_start":1206,"line_end":1206,"column_start":16,"column_end":24},"kind":"SuperTrait","from":{"krate":0,"index":48},"to":{"krate":0,"index":239}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":38854,"byte_end":38862,"line_start":1209,"line_end":1209,"column_start":17,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":48},"to":{"krate":0,"index":240}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":38940,"byte_end":38948,"line_start":1212,"line_end":1212,"column_start":17,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":48},"to":{"krate":0,"index":241}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":39026,"byte_end":39034,"line_start":1215,"line_end":1215,"column_start":17,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":48},"to":{"krate":0,"index":242}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":39127,"byte_end":39135,"line_start":1218,"line_end":1218,"column_start":18,"column_end":26},"kind":"SuperTrait","from":{"krate":0,"index":48},"to":{"krate":0,"index":243}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":39212,"byte_end":39220,"line_start":1221,"line_end":1221,"column_start":21,"column_end":29},"kind":"SuperTrait","from":{"krate":0,"index":48},"to":{"krate":0,"index":244}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":39300,"byte_end":39308,"line_start":1224,"line_end":1224,"column_start":22,"column_end":30},"kind":"SuperTrait","from":{"krate":0,"index":48},"to":{"krate":0,"index":245}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":39391,"byte_end":39399,"line_start":1227,"line_end":1227,"column_start":22,"column_end":30},"kind":"SuperTrait","from":{"krate":0,"index":48},"to":{"krate":0,"index":246}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":39482,"byte_end":39490,"line_start":1230,"line_end":1230,"column_start":22,"column_end":30},"kind":"SuperTrait","from":{"krate":0,"index":48},"to":{"krate":0,"index":247}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":39588,"byte_end":39596,"line_start":1233,"line_end":1233,"column_start":23,"column_end":31},"kind":"SuperTrait","from":{"krate":0,"index":48},"to":{"krate":0,"index":248}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":39673,"byte_end":39681,"line_start":1236,"line_end":1236,"column_start":20,"column_end":28},"kind":"SuperTrait","from":{"krate":0,"index":48},"to":{"krate":0,"index":249}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":39761,"byte_end":39769,"line_start":1239,"line_end":1239,"column_start":21,"column_end":29},"kind":"SuperTrait","from":{"krate":0,"index":48},"to":{"krate":0,"index":250}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":39852,"byte_end":39860,"line_start":1242,"line_end":1242,"column_start":21,"column_end":29},"kind":"SuperTrait","from":{"krate":0,"index":48},"to":{"krate":0,"index":251}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":39943,"byte_end":39951,"line_start":1245,"line_end":1245,"column_start":21,"column_end":29},"kind":"SuperTrait","from":{"krate":0,"index":48},"to":{"krate":0,"index":252}},{"span":{"file_name":"/Users/jgosmann/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.0.1/src/lib.rs","byte_start":40049,"byte_end":40057,"line_start":1248,"line_end":1248,"column_start":22,"column_end":30},"kind":"SuperTrait","from":{"krate":0,"index":48},"to":{"krate":0,"index":253}}]}